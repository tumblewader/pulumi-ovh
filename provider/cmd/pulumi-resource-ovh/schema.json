{
    "name": "ovh",
    "description": "A Pulumi package for creating and managing ovh cloud resources.",
    "keywords": [
        "pulumi",
        "ovh",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ovh` Terraform Provider](https://github.com/terraform-providers/terraform-provider-ovh).",
    "repository": "https://github.com/pulumi/pulumi-ovh",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n"
            }
        },
        "defaults": [
            "endpoint"
        ]
    },
    "types": {
        "ovh:index/CloudNetworkPrivateRegionsStatus:CloudNetworkPrivateRegionsStatus": {
            "properties": {
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:index/CloudNetworkPrivateSubnetIpPool:CloudNetworkPrivateSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dhcp",
                        "end",
                        "network",
                        "region",
                        "start"
                    ]
                }
            }
        },
        "ovh:index/CloudUserRole:CloudUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "ovh:index/DedicatedServerInstallTaskDetails:DedicatedServerInstallTaskDetails": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "description": "Template change log details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "description": "Set up the server using the provided hostname instead of the default hostname.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskGroupId": {
                    "type": "integer",
                    "description": "Disk group id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "installRtm": {
                    "type": "boolean",
                    "description": "set to true to install RTM.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "installSqlServer": {
                    "type": "boolean",
                    "description": "set to true to install sql server (Windows template only).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "language": {
                    "type": "string",
                    "description": "language.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noRaid": {
                    "type": "boolean",
                    "description": "set to true to disable RAID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "description": "Indicate the URL where your postinstall customisation script is located.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "description": "Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resetHwRaid": {
                    "type": "boolean",
                    "description": "set to true to make a hardware raid reset.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "softRaidDevices": {
                    "type": "integer",
                    "description": "soft raid devices.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKeyName": {
                    "type": "string",
                    "description": "Name of the ssh key that should be installed. Password login will be disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDistribKernel": {
                    "type": "boolean",
                    "description": "Use the distribution's native kernel instead of the recommended OVH Kernel.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useSpla": {
                    "type": "boolean",
                    "description": "set to true to use SPLA.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:index/IPLoadbalancingHTTPFarmProbe:IPLoadbalancingHTTPFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oko`, `pgsql`, `smtp`, `tcp`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "method",
                        "pattern",
                        "port",
                        "type",
                        "url"
                    ]
                }
            }
        },
        "ovh:index/IPLoadbalancingHTTPRouteAction:IPLoadbalancingHTTPRouteAction": {
            "properties": {
                "status": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:index/IPLoadbalancingTCPFarmProbe:IPLoadbalancingTCPFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oko`, `pgsql`, `smtp`, `tcp`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:index/MeInstallationTemplateCustomization:MeInstallationTemplateCustomization": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rating": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDistributionKernel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:index/PubicCloudPrivateNetworkRegionsStatus:PubicCloudPrivateNetworkRegionsStatus": {
            "properties": {
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:index/PubicCloudPrivateNetworkSubnetIpPool:PubicCloudPrivateNetworkSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dhcp",
                        "end",
                        "network",
                        "region",
                        "start"
                    ]
                }
            }
        },
        "ovh:index/PublicCloudUserRole:PublicCloudUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "ovh:index/getCloudRegionService:getCloudRegionService": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the region associated with the public cloud\nproject.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getDedicatedServerVni:getDedicatedServerVni": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "VirtualNetworkInterface activation state\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "VirtualNetworkInterface mode (public,vrack,vrack_aggregation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User defined VirtualNetworkInterface name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverName": {
                    "type": "string",
                    "description": "Server bound to this VirtualNetworkInterface\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uuid": {
                    "type": "string",
                    "description": "VirtualNetworkInterface unique id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vrack": {
                    "type": "string",
                    "description": "vRack name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "mode",
                "name",
                "nics",
                "serverName",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getIPLoadbalancingOrderableZone:getIPLoadbalancingOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "The billing planCode for this zone\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "planCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplateCustomization:getMeInstallationTemplateCustomization": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rating": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDistributionKernel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "changeLog",
                "customHostname",
                "postInstallationScriptLink",
                "postInstallationScriptReturn",
                "rating",
                "sshKeyName",
                "useDistributionKernel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplatePartitionScheme:getMeInstallationTemplatePartitionScheme": {
            "properties": {
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getMeInstallationTemplatePartitionSchemeHardwareRaid:getMeInstallationTemplatePartitionSchemeHardwareRaid"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getMeInstallationTemplatePartitionSchemePartition:getMeInstallationTemplatePartitionSchemePartition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hardwareRaids",
                "name",
                "partitions",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplatePartitionSchemeHardwareRaid:getMeInstallationTemplatePartitionSchemeHardwareRaid": {
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "step": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "disks",
                "mode",
                "name",
                "step"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplatePartitionSchemePartition:getMeInstallationTemplatePartitionSchemePartition": {
            "properties": {
                "filesystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mountpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "raid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filesystem",
                "mountpoint",
                "order",
                "raid",
                "size",
                "type",
                "volumeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getPublicCloudRegionService:getPublicCloudRegionService": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "the name of the public cloud service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getVPSDatacenter:getVPSDatacenter": {
            "properties": {
                "longname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "longname",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getVPSModel:getVPSModel": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "offer",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ovh package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n"
            }
        },
        "required": [
            "endpoint"
        ],
        "inputProperties": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n"
            }
        },
        "requiredInputs": [
            "endpoint"
        ]
    },
    "resources": {
        "ovh:index/cloudNetworkPrivate:CloudNetworkPrivate": {
            "description": "Creates a private network in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst net = new ovh.CloudNetworkPrivate(\"net\", {\n    projectId: \"67890\",\n    regions: [\n        \"GRA1\",\n        \"BHS1\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnet = ovh.CloudNetworkPrivate(\"net\",\n    project_id=\"67890\",\n    regions=[\n        \"GRA1\",\n        \"BHS1\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var net = new Ovh.CloudNetworkPrivate(\"net\", new Ovh.CloudNetworkPrivateArgs\n        {\n            ProjectId = \"67890\",\n            Regions = \n            {\n                \"GRA1\",\n                \"BHS1\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudNetworkPrivate(ctx, \"net\", \u0026ovh.CloudNetworkPrivateArgs{\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t\tRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"GRA1\"),\n\t\t\t\tpulumi.String(\"BHS1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "regionsStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudNetworkPrivateRegionsStatus:CloudNetworkPrivateRegionsStatus"
                    },
                    "description": "A map representing the status of the network per region.\n* `regions_status/region` - The id of the region.\n* `regions_status/status` - The status of the network in the region.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "the type of the network. Either 'private' or 'public'.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                }
            },
            "required": [
                "name",
                "projectId",
                "regions",
                "regionsStatuses",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudNetworkPrivate resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                    },
                    "regionsStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudNetworkPrivateRegionsStatus:CloudNetworkPrivateRegionsStatus"
                        },
                        "description": "A map representing the status of the network per region.\n* `regions_status/region` - The id of the region.\n* `regions_status/status` - The status of the network in the region.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the network. Either 'private' or 'public'.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudNetworkPrivateSubnet:CloudNetworkPrivateSubnet": {
            "description": "Creates a subnet in a private network of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subnet = new ovh.CloudNetworkPrivateSubnet(\"subnet\", {\n    dhcp: true,\n    end: \"192.168.168.200\",\n    network: \"192.168.168.0/24\",\n    networkId: \"0234543\",\n    noGateway: false,\n    projectId: \"67890\",\n    region: \"GRA1\",\n    start: \"192.168.168.100\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubnet = ovh.CloudNetworkPrivateSubnet(\"subnet\",\n    dhcp=True,\n    end=\"192.168.168.200\",\n    network=\"192.168.168.0/24\",\n    network_id=\"0234543\",\n    no_gateway=False,\n    project_id=\"67890\",\n    region=\"GRA1\",\n    start=\"192.168.168.100\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var subnet = new Ovh.CloudNetworkPrivateSubnet(\"subnet\", new Ovh.CloudNetworkPrivateSubnetArgs\n        {\n            Dhcp = true,\n            End = \"192.168.168.200\",\n            Network = \"192.168.168.0/24\",\n            NetworkId = \"0234543\",\n            NoGateway = false,\n            ProjectId = \"67890\",\n            Region = \"GRA1\",\n            Start = \"192.168.168.100\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudNetworkPrivateSubnet(ctx, \"subnet\", \u0026ovh.CloudNetworkPrivateSubnetArgs{\n\t\t\tDhcp:      pulumi.Bool(true),\n\t\t\tEnd:       pulumi.String(\"192.168.168.200\"),\n\t\t\tNetwork:   pulumi.String(\"192.168.168.0/24\"),\n\t\t\tNetworkId: pulumi.String(\"0234543\"),\n\t\t\tNoGateway: pulumi.Bool(false),\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t\tRegion:    pulumi.String(\"GRA1\"),\n\t\t\tStart:     pulumi.String(\"192.168.168.100\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Ip Block representing the subnet cidr.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The IP of the gateway\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudNetworkPrivateSubnetIpPool:CloudNetworkPrivateSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nChanging this forces a new resource to be created.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                }
            },
            "required": [
                "cidr",
                "end",
                "gatewayIp",
                "ipPools",
                "network",
                "networkId",
                "projectId",
                "region",
                "start"
            ],
            "inputProperties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nChanging this forces a new resource to be created.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                }
            },
            "requiredInputs": [
                "end",
                "network",
                "networkId",
                "projectId",
                "region",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudNetworkPrivateSubnet resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Ip Block representing the subnet cidr.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                    },
                    "end": {
                        "type": "string",
                        "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway\n"
                    },
                    "ipPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudNetworkPrivateSubnetIpPool:CloudNetworkPrivateSubnetIpPool"
                        },
                        "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                    },
                    "noGateway": {
                        "type": "boolean",
                        "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nChanging this forces a new resource to be created.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                    },
                    "start": {
                        "type": "string",
                        "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudUser:CloudUser": {
            "description": "Creates a user in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user1 = new ovh.CloudUser(\"user1\", {\n    projectId: \"67890\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser1 = ovh.CloudUser(\"user1\", project_id=\"67890\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user1 = new Ovh.CloudUser(\"user1\", new Ovh.CloudUserArgs\n        {\n            ProjectId = \"67890\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudUser(ctx, \"user1\", \u0026ovh.CloudUserArgs{\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used. DEPRECATED. Use `service_name` instead.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudUserRole:CloudUserRole"
                    },
                    "description": "A list of roles associated with the user.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. Conflicts with `project_id`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n"
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                }
            },
            "required": [
                "creationDate",
                "openstackRc",
                "password",
                "roles",
                "status",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used. DEPRECATED. Use `service_name` instead.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. Conflicts with `project_id`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudUser resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n"
                    },
                    "openstackRc": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used. DEPRECATED. Use `service_name` instead.\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "The name of a role. See `role_names`.\n"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudUserRole:CloudUserRole"
                        },
                        "description": "A list of roles associated with the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. Conflicts with `project_id`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedCephACL:DedicatedCephACL": {
            "description": "Add a new access ACL for the given network/mask.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my-ceph = ovh.getDedicatedCEPH({\n    serviceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n});\nconst my_acl = new ovh.DedicatedCephACL(\"my-acl\", {\n    serviceName: my_ceph.then(my_ceph =\u003e my_ceph.id),\n    network: \"1.2.3.4\",\n    netmask: \"255.255.255.255\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.get_dedicated_ceph(service_name=\"94d423da-0e55-45f2-9812-836460a19939\")\nmy_acl = ovh.DedicatedCephACL(\"my-acl\",\n    service_name=my_ceph.id,\n    network=\"1.2.3.4\",\n    netmask=\"255.255.255.255\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_ceph = Output.Create(Ovh.GetDedicatedCEPH.InvokeAsync(new Ovh.GetDedicatedCEPHArgs\n        {\n            ServiceName = \"94d423da-0e55-45f2-9812-836460a19939\",\n        }));\n        var my_acl = new Ovh.DedicatedCephACL(\"my-acl\", new Ovh.DedicatedCephACLArgs\n        {\n            ServiceName = my_ceph.Apply(my_ceph =\u003e my_ceph.Id),\n            Network = \"1.2.3.4\",\n            Netmask = \"255.255.255.255\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmy_ceph, err := ovh.GetDedicatedCEPH(ctx, \u0026GetDedicatedCEPHArgs{\n\t\t\tServiceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDedicatedCephACL(ctx, \"my-acl\", \u0026ovh.DedicatedCephACLArgs{\n\t\t\tServiceName: pulumi.String(my_ceph.Id),\n\t\t\tNetwork:     pulumi.String(\"1.2.3.4\"),\n\t\t\tNetmask:     pulumi.String(\"255.255.255.255\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "family": {
                    "type": "string",
                    "description": "IP family. `IPv4` or `IPv6`\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n"
                }
            },
            "required": [
                "family",
                "netmask",
                "network",
                "serviceName"
            ],
            "inputProperties": {
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n"
                }
            },
            "requiredInputs": [
                "netmask",
                "network",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedCephACL resources.\n",
                "properties": {
                    "family": {
                        "type": "string",
                        "description": "IP family. `IPv4` or `IPv6`\n"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask to apply\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network IP to authorize\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated CEPH\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedServerInstallTask:DedicatedServerInstallTask": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.getDedicatedServerBoots({\n    serviceName: \"ns00000.ip-1-2-3.eu\",\n    bootType: \"rescue\",\n});\nconst key = new ovh.MeSSHKey(\"key\", {\n    keyName: \"mykey\",\n    key: \"ssh-ed25519 AAAAC3...\",\n});\nconst debian = new ovh.MeInstallationTemplate(\"debian\", {\n    baseTemplateName: \"debian10_64\",\n    templateName: \"mydebian10\",\n    defaultLanguage: \"en\",\n    customization: {\n        changeLog: \"v1\",\n        customHostname: \"mytest\",\n        sshKeyName: key.keyName,\n    },\n});\nconst serverInstall = new ovh.DedicatedServerInstallTask(\"serverInstall\", {\n    serviceName: \"ns00000.ip-1-2-3.eu\",\n    templateName: debian.templateName,\n    bootidOnDestroy: rescue.then(rescue =\u003e rescue.results?[0]),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrescue = ovh.get_dedicated_server_boots(service_name=\"ns00000.ip-1-2-3.eu\",\n    boot_type=\"rescue\")\nkey = ovh.MeSSHKey(\"key\",\n    key_name=\"mykey\",\n    key=\"ssh-ed25519 AAAAC3...\")\ndebian = ovh.MeInstallationTemplate(\"debian\",\n    base_template_name=\"debian10_64\",\n    template_name=\"mydebian10\",\n    default_language=\"en\",\n    customization=ovh.MeInstallationTemplateCustomizationArgs(\n        change_log=\"v1\",\n        custom_hostname=\"mytest\",\n        ssh_key_name=key.key_name,\n    ))\nserver_install = ovh.DedicatedServerInstallTask(\"serverInstall\",\n    service_name=\"ns00000.ip-1-2-3.eu\",\n    template_name=debian.template_name,\n    bootid_on_destroy=rescue.results[0])\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var rescue = Output.Create(Ovh.GetDedicatedServerBoots.InvokeAsync(new Ovh.GetDedicatedServerBootsArgs\n        {\n            ServiceName = \"ns00000.ip-1-2-3.eu\",\n            BootType = \"rescue\",\n        }));\n        var key = new Ovh.MeSSHKey(\"key\", new Ovh.MeSSHKeyArgs\n        {\n            KeyName = \"mykey\",\n            Key = \"ssh-ed25519 AAAAC3...\",\n        });\n        var debian = new Ovh.MeInstallationTemplate(\"debian\", new Ovh.MeInstallationTemplateArgs\n        {\n            BaseTemplateName = \"debian10_64\",\n            TemplateName = \"mydebian10\",\n            DefaultLanguage = \"en\",\n            Customization = new Ovh.Inputs.MeInstallationTemplateCustomizationArgs\n            {\n                ChangeLog = \"v1\",\n                CustomHostname = \"mytest\",\n                SshKeyName = key.KeyName,\n            },\n        });\n        var serverInstall = new Ovh.DedicatedServerInstallTask(\"serverInstall\", new Ovh.DedicatedServerInstallTaskArgs\n        {\n            ServiceName = \"ns00000.ip-1-2-3.eu\",\n            TemplateName = debian.TemplateName,\n            BootidOnDestroy = rescue.Apply(rescue =\u003e rescue.Results?[0]),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := ovh.GetDedicatedServerBoots(ctx, \u0026GetDedicatedServerBootsArgs{\n\t\t\tServiceName: \"ns00000.ip-1-2-3.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tkey, err := ovh.NewMeSSHKey(ctx, \"key\", \u0026ovh.MeSSHKeyArgs{\n\t\t\tKeyName: pulumi.String(\"mykey\"),\n\t\t\tKey:     pulumi.String(\"ssh-ed25519 AAAAC3...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdebian, err := ovh.NewMeInstallationTemplate(ctx, \"debian\", \u0026ovh.MeInstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"debian10_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mydebian10\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"en\"),\n\t\t\tCustomization: \u0026MeInstallationTemplateCustomizationArgs{\n\t\t\t\tChangeLog:      pulumi.String(\"v1\"),\n\t\t\t\tCustomHostname: pulumi.String(\"mytest\"),\n\t\t\t\tSshKeyName:     key.KeyName,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDedicatedServerInstallTask(ctx, \"serverInstall\", \u0026ovh.DedicatedServerInstallTaskArgs{\n\t\t\tServiceName:     pulumi.String(\"ns00000.ip-1-2-3.eu\"),\n\t\t\tTemplateName:    debian.TemplateName,\n\t\t\tBootidOnDestroy: pulumi.Int(rescue.Results[0]),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Install asked`)\n"
                },
                "details": {
                    "$ref": "#/types/ovh:index/DedicatedServerInstallTaskDetails:DedicatedServerInstallTaskDetails",
                    "description": "see `details` block below.\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardInstall`).\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name.\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status",
                "templateName"
            ],
            "inputProperties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "details": {
                    "$ref": "#/types/ovh:index/DedicatedServerInstallTaskDetails:DedicatedServerInstallTaskDetails",
                    "description": "see `details` block below.\n"
                },
                "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name.\n"
                }
            },
            "requiredInputs": [
                "serviceName",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerInstallTask resources.\n",
                "properties": {
                    "bootidOnDestroy": {
                        "type": "integer",
                        "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Install asked`)\n"
                    },
                    "details": {
                        "$ref": "#/types/ovh:index/DedicatedServerInstallTaskDetails:DedicatedServerInstallTaskDetails",
                        "description": "see `details` block below.\n"
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardInstall`).\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "partitionSchemeName": {
                        "type": "string",
                        "description": "Partition scheme name.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.getDedicatedServerBoots({\n    serviceName: \"ns00000.ip-1-2-3.eu\",\n    bootType: \"rescue\",\n    kernel: \"rescue64-pro\",\n});\nconst serverOnRescue = new ovh.DedicatedServerUpdate(\"serverOnRescue\", {\n    serviceName: \"ns00000.ip-1-2-3.eu\",\n    bootId: rescue.then(rescue =\u003e rescue.results?[0]),\n    monitoring: true,\n    state: \"ok\",\n});\nconst serverReboot = new ovh.DedicatedServerRebootTask(\"serverReboot\", {\n    serviceName: rescue.then(rescue =\u003e rescue.serviceName),\n    keepers: [serverOnRescue.bootId],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrescue = ovh.get_dedicated_server_boots(service_name=\"ns00000.ip-1-2-3.eu\",\n    boot_type=\"rescue\",\n    kernel=\"rescue64-pro\")\nserver_on_rescue = ovh.DedicatedServerUpdate(\"serverOnRescue\",\n    service_name=\"ns00000.ip-1-2-3.eu\",\n    boot_id=rescue.results[0],\n    monitoring=True,\n    state=\"ok\")\nserver_reboot = ovh.DedicatedServerRebootTask(\"serverReboot\",\n    service_name=rescue.service_name,\n    keepers=[server_on_rescue.boot_id])\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var rescue = Output.Create(Ovh.GetDedicatedServerBoots.InvokeAsync(new Ovh.GetDedicatedServerBootsArgs\n        {\n            ServiceName = \"ns00000.ip-1-2-3.eu\",\n            BootType = \"rescue\",\n            Kernel = \"rescue64-pro\",\n        }));\n        var serverOnRescue = new Ovh.DedicatedServerUpdate(\"serverOnRescue\", new Ovh.DedicatedServerUpdateArgs\n        {\n            ServiceName = \"ns00000.ip-1-2-3.eu\",\n            BootId = rescue.Apply(rescue =\u003e rescue.Results?[0]),\n            Monitoring = true,\n            State = \"ok\",\n        });\n        var serverReboot = new Ovh.DedicatedServerRebootTask(\"serverReboot\", new Ovh.DedicatedServerRebootTaskArgs\n        {\n            ServiceName = rescue.Apply(rescue =\u003e rescue.ServiceName),\n            Keepers = \n            {\n                serverOnRescue.BootId,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := ovh.GetDedicatedServerBoots(ctx, \u0026GetDedicatedServerBootsArgs{\n\t\t\tServiceName: \"ns00000.ip-1-2-3.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t\tKernel:      pulumi.StringRef(\"rescue64-pro\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tserverOnRescue, err := ovh.NewDedicatedServerUpdate(ctx, \"serverOnRescue\", \u0026ovh.DedicatedServerUpdateArgs{\n\t\t\tServiceName: pulumi.String(\"ns00000.ip-1-2-3.eu\"),\n\t\t\tBootId:      pulumi.Int(rescue.Results[0]),\n\t\t\tMonitoring:  pulumi.Bool(true),\n\t\t\tState:       pulumi.String(\"ok\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDedicatedServerRebootTask(ctx, \"serverReboot\", \u0026ovh.DedicatedServerRebootTaskArgs{\n\t\t\tServiceName: pulumi.String(rescue.ServiceName),\n\t\t\tKeepers: pulumi.StringArray{\n\t\t\t\tserverOnRescue.BootId,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Reboot asked`)\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardReboot`).\n"
                },
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger reboot, used also to form implicit dependencies\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "keepers",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger reboot, used also to form implicit dependencies\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerRebootTask resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Reboot asked`)\n"
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardReboot`).\n"
                    },
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values traccked to trigger reboot, used also to form implicit dependencies\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedServerUpdate:DedicatedServerUpdate": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.getDedicatedServerBoots({\n    serviceName: \"ns00000.ip-1-2-3.eu\",\n    bootType: \"rescue\",\n    kernel: \"rescue64-pro\",\n});\nconst server = new ovh.DedicatedServerUpdate(\"server\", {\n    serviceName: \"ns00000.ip-1-2-3.eu\",\n    bootId: rescue.then(rescue =\u003e rescue.results?[0]),\n    monitoring: true,\n    state: \"ok\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrescue = ovh.get_dedicated_server_boots(service_name=\"ns00000.ip-1-2-3.eu\",\n    boot_type=\"rescue\",\n    kernel=\"rescue64-pro\")\nserver = ovh.DedicatedServerUpdate(\"server\",\n    service_name=\"ns00000.ip-1-2-3.eu\",\n    boot_id=rescue.results[0],\n    monitoring=True,\n    state=\"ok\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var rescue = Output.Create(Ovh.GetDedicatedServerBoots.InvokeAsync(new Ovh.GetDedicatedServerBootsArgs\n        {\n            ServiceName = \"ns00000.ip-1-2-3.eu\",\n            BootType = \"rescue\",\n            Kernel = \"rescue64-pro\",\n        }));\n        var server = new Ovh.DedicatedServerUpdate(\"server\", new Ovh.DedicatedServerUpdateArgs\n        {\n            ServiceName = \"ns00000.ip-1-2-3.eu\",\n            BootId = rescue.Apply(rescue =\u003e rescue.Results?[0]),\n            Monitoring = true,\n            State = \"ok\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := ovh.GetDedicatedServerBoots(ctx, \u0026GetDedicatedServerBootsArgs{\n\t\t\tServiceName: \"ns00000.ip-1-2-3.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t\tKernel:      pulumi.StringRef(\"rescue64-pro\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDedicatedServerUpdate(ctx, \"server\", \u0026ovh.DedicatedServerUpdateArgs{\n\t\t\tServiceName: pulumi.String(\"ns00000.ip-1-2-3.eu\"),\n\t\t\tBootId:      pulumi.Int(rescue.Results[0]),\n\t\t\tMonitoring:  pulumi.Bool(true),\n\t\t\tState:       pulumi.String(\"ok\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "required": [
                "bootId",
                "monitoring",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerUpdate resources.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/domainZoneRecord:DomainZoneRecord": {
            "description": "Provides a OVH domain zone record.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Add a record to a sub-domain\nconst test = new ovh.DomainZoneRecord(\"test\", {\n    fieldtype: \"A\",\n    subdomain: \"test\",\n    target: \"0.0.0.0\",\n    ttl: 3600,\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\n# Add a record to a sub-domain\ntest = ovh.DomainZoneRecord(\"test\",\n    fieldtype=\"A\",\n    subdomain=\"test\",\n    target=\"0.0.0.0\",\n    ttl=3600,\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Add a record to a sub-domain\n        var test = new Ovh.DomainZoneRecord(\"test\", new Ovh.DomainZoneRecordArgs\n        {\n            Fieldtype = \"A\",\n            Subdomain = \"test\",\n            Target = \"0.0.0.0\",\n            Ttl = 3600,\n            Zone = \"testdemo.ovh\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewDomainZoneRecord(ctx, \"test\", \u0026ovh.DomainZoneRecordArgs{\n\t\t\tFieldtype: pulumi.String(\"A\"),\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"0.0.0.0\"),\n\t\t\tTtl:       pulumi.Int(3600),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVH record can be imported using the `id` and the `zone`, eg\n\n```sh\n $ pulumi import ovh:index/domainZoneRecord:DomainZoneRecord test 1234OVH_ID.zone.tld\n```\n\n ",
            "properties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "required": [
                "fieldtype",
                "target",
                "zone"
            ],
            "inputProperties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "requiredInputs": [
                "fieldtype",
                "target",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainZoneRecord resources.\n",
                "properties": {
                    "fieldtype": {
                        "type": "string",
                        "description": "The type of the record\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the record\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the record\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL of the record\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the record to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/domainZoneRedirection:DomainZoneRedirection": {
            "description": "Provides a OVH domain zone redirection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Add a redirection to a sub-domain\nconst test = new ovh.DomainZoneRedirection(\"test\", {\n    subdomain: \"test\",\n    target: \"http://www.ovh\",\n    type: \"visiblePermanent\",\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\n# Add a redirection to a sub-domain\ntest = ovh.DomainZoneRedirection(\"test\",\n    subdomain=\"test\",\n    target=\"http://www.ovh\",\n    type=\"visiblePermanent\",\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Add a redirection to a sub-domain\n        var test = new Ovh.DomainZoneRedirection(\"test\", new Ovh.DomainZoneRedirectionArgs\n        {\n            Subdomain = \"test\",\n            Target = \"http://www.ovh\",\n            Type = \"visiblePermanent\",\n            Zone = \"testdemo.ovh\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewDomainZoneRedirection(ctx, \"test\", \u0026ovh.DomainZoneRedirectionArgs{\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"http://www.ovh\"),\n\t\t\tType:      pulumi.String(\"visiblePermanent\"),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "required": [
                "target",
                "type",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "requiredInputs": [
                "target",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainZoneRedirection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this redirection\n"
                    },
                    "keywords": {
                        "type": "string",
                        "description": "Keywords to describe this redirection\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the redirection\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the redirection\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of this redirection\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the redirection, with values:\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the redirection to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingHTTPFarm:IPLoadbalancingHTTPFarm": {
            "description": "Creates a http backend server group (farm) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IPLoadbalancingHTTPFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.id,\n    zone: \"GRA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.IPLoadbalancingHTTPFarm(\"farmname\",\n    display_name=\"ingress-8080-gra\",\n    service_name=lb.id,\n    zone=\"GRA\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farmname = new Ovh.IPLoadbalancingHTTPFarm(\"farmname\", new Ovh.IPLoadbalancingHTTPFarmArgs\n        {\n            DisplayName = \"ingress-8080-gra\",\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            Zone = \"GRA\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingHTTPFarm(ctx, \"farmname\", \u0026ovh.IPLoadbalancingHTTPFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tZone:        pulumi.String(\"GRA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IPLoadbalancingHTTPFarmProbe:IPLoadbalancingHTTPFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IPLoadbalancingHTTPFarmProbe:IPLoadbalancingHTTPFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingHTTPFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for backends to recieve traffic on.\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:index/IPLoadbalancingHTTPFarmProbe:IPLoadbalancingHTTPFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingHTTPFarmServer:IPLoadbalancingHTTPFarmServer": {
            "description": "Creates a backend server entry linked to http loadbalancing group (farm)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmname = new ovh.IPLoadbalancingHTTPFarm(\"farmname\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    port: 8080,\n    zone: \"all\",\n});\nconst backend = new ovh.IPLoadbalancingHTTPFarmServer(\"backend\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    farmId: farmname.id,\n    displayName: \"mybackend\",\n    address: \"4.5.6.7\",\n    status: \"active\",\n    port: 80,\n    proxyProtocolVersion: v2,\n    weight: 2,\n    probe: true,\n    ssl: false,\n    backup: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.IPLoadbalancingHTTPFarm(\"farmname\",\n    service_name=lb.id,\n    port=8080,\n    zone=\"all\")\nbackend = ovh.IPLoadbalancingHTTPFarmServer(\"backend\",\n    service_name=lb.id,\n    farm_id=farmname.id,\n    display_name=\"mybackend\",\n    address=\"4.5.6.7\",\n    status=\"active\",\n    port=80,\n    proxy_protocol_version=v2,\n    weight=2,\n    probe=True,\n    ssl=False,\n    backup=True)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farmname = new Ovh.IPLoadbalancingHTTPFarm(\"farmname\", new Ovh.IPLoadbalancingHTTPFarmArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            Port = 8080,\n            Zone = \"all\",\n        });\n        var backend = new Ovh.IPLoadbalancingHTTPFarmServer(\"backend\", new Ovh.IPLoadbalancingHTTPFarmServerArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            FarmId = farmname.Id,\n            DisplayName = \"mybackend\",\n            Address = \"4.5.6.7\",\n            Status = \"active\",\n            Port = 80,\n            ProxyProtocolVersion = v2,\n            Weight = 2,\n            Probe = true,\n            Ssl = false,\n            Backup = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmname, err := ovh.NewIPLoadbalancingHTTPFarm(ctx, \"farmname\", \u0026ovh.IPLoadbalancingHTTPFarmArgs{\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tPort:        pulumi.Int(8080),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingHTTPFarmServer(ctx, \"backend\", \u0026ovh.IPLoadbalancingHTTPFarmServerArgs{\n\t\t\tServiceName:          pulumi.String(lb.Id),\n\t\t\tFarmId:               farmname.ID(),\n\t\t\tDisplayName:          pulumi.String(\"mybackend\"),\n\t\t\tAddress:              pulumi.String(\"4.5.6.7\"),\n\t\t\tStatus:               pulumi.String(\"active\"),\n\t\t\tPort:                 pulumi.Int(80),\n\t\t\tProxyProtocolVersion: pulumi.Any(v2),\n\t\t\tWeight:               pulumi.Int(2),\n\t\t\tProbe:                pulumi.Bool(true),\n\t\t\tSsl:                  pulumi.Bool(false),\n\t\t\tBackup:               pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "cookie": {
                    "type": "string",
                    "description": "Value of the stickiness cookie used for this backend.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "cookie",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingHTTPFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVH network)\n"
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "cookie": {
                        "type": "string",
                        "description": "Value of the stickiness cookie used for this backend.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingHTTPFrontend:IPLoadbalancingHTTPFrontend": {
            "description": "Creates a backend http server group (frontend) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IPLoadbalancingHTTPFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IPLoadbalancingHTTPFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.IPLoadbalancingHTTPFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntestfrontend = ovh.IPLoadbalancingHTTPFrontend(\"testfrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farm80 = new Ovh.IPLoadbalancingHTTPFarm(\"farm80\", new Ovh.IPLoadbalancingHTTPFarmArgs\n        {\n            DisplayName = \"ingress-8080-gra\",\n            Port = 80,\n            ServiceName = lb.Apply(lb =\u003e lb.ServiceName),\n            Zone = \"all\",\n        });\n        var testfrontend = new Ovh.IPLoadbalancingHTTPFrontend(\"testfrontend\", new Ovh.IPLoadbalancingHTTPFrontendArgs\n        {\n            DefaultFarmId = farm80.Id,\n            DisplayName = \"ingress-8080-gra\",\n            Port = \"80,443\",\n            ServiceName = lb.Apply(lb =\u003e lb.ServiceName),\n            Zone = \"all\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := ovh.NewIPLoadbalancingHTTPFarm(ctx, \"farm80\", \u0026ovh.IPLoadbalancingHTTPFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingHTTPFrontend(ctx, \"testfrontend\", \u0026ovh.IPLoadbalancingHTTPFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:          pulumi.String(\"80,443\"),\n\t\t\tServiceName:   pulumi.String(lb.ServiceName),\n\t\t\tZone:          pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingHTTPFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingHTTPRoute:IPLoadbalancingHTTPRoute": {
            "description": "Manage http route for a loadbalancer service\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nRoute which redirect all url to https.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst httpsredirect = new ovh.IPLoadbalancingHTTPRoute(\"httpsredirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nhttpsredirect = ovh.IPLoadbalancingHTTPRoute(\"httpsredirect\",\n    action=ovh.IPLoadbalancingHTTPRouteActionArgs(\n        status=302,\n        target=f\"https://{host}{path}{arguments}\",\n        type=\"redirect\",\n    ),\n    display_name=\"Redirect to HTTPS\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var httpsredirect = new Ovh.IPLoadbalancingHTTPRoute(\"httpsredirect\", new Ovh.IPLoadbalancingHTTPRouteArgs\n        {\n            Action = new Ovh.Inputs.IPLoadbalancingHTTPRouteActionArgs\n            {\n                Status = 302,\n                Target = $\"https://{host}{path}{arguments}\",\n                Type = \"redirect\",\n            },\n            DisplayName = \"Redirect to HTTPS\",\n            ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n            Weight = 1,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIPLoadbalancingHTTPRoute(ctx, \"httpsredirect\", \u0026ovh.IPLoadbalancingHTTPRouteArgs{\n\t\t\tAction: \u0026IPLoadbalancingHTTPRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"https://\", host, path, arguments)),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:index/IPLoadbalancingHTTPRouteAction:IPLoadbalancingHTTPRouteAction"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n* `action.status` - HTTP status code for \"redirect\" and \"reject\" actions\n* `action.target` - Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n* `action.type` - (Required) Action to trigger if all the rules of this route matches\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "serviceName"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:index/IPLoadbalancingHTTPRouteAction:IPLoadbalancingHTTPRouteAction"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n* `action.status` - HTTP status code for \"redirect\" and \"reject\" actions\n* `action.target` - Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n* `action.type` - (Required) Action to trigger if all the rules of this route matches\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingHTTPRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:index/IPLoadbalancingHTTPRouteAction:IPLoadbalancingHTTPRouteAction"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n* `action.status` - HTTP status code for \"redirect\" and \"reject\" actions\n* `action.target` - Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n* `action.type` - (Required) Action to trigger if all the rules of this route matches\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingHTTPRouteRule:IPLoadbalancingHTTPRouteRule": {
            "description": "Manage rules for HTTP route.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nRoute which redirect all url to https for example.com (Vhost).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst httpsredirect = new ovh.IPLoadbalancingHTTPRoute(\"httpsredirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    frontendId: 11111,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\nconst examplerule = new ovh.IPLoadbalancingHTTPRouteRule(\"examplerule\", {\n    displayName: \"Match example.com host\",\n    field: \"host\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: httpsredirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nhttpsredirect = ovh.IPLoadbalancingHTTPRoute(\"httpsredirect\",\n    action=ovh.IPLoadbalancingHTTPRouteActionArgs(\n        status=302,\n        target=f\"https://{host}{path}{arguments}\",\n        type=\"redirect\",\n    ),\n    display_name=\"Redirect to HTTPS\",\n    frontend_id=11111,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\nexamplerule = ovh.IPLoadbalancingHTTPRouteRule(\"examplerule\",\n    display_name=\"Match example.com host\",\n    field=\"host\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=httpsredirect.id,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var httpsredirect = new Ovh.IPLoadbalancingHTTPRoute(\"httpsredirect\", new Ovh.IPLoadbalancingHTTPRouteArgs\n        {\n            Action = new Ovh.Inputs.IPLoadbalancingHTTPRouteActionArgs\n            {\n                Status = 302,\n                Target = $\"https://{host}{path}{arguments}\",\n                Type = \"redirect\",\n            },\n            DisplayName = \"Redirect to HTTPS\",\n            FrontendId = 11111,\n            ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n            Weight = 1,\n        });\n        var examplerule = new Ovh.IPLoadbalancingHTTPRouteRule(\"examplerule\", new Ovh.IPLoadbalancingHTTPRouteRuleArgs\n        {\n            DisplayName = \"Match example.com host\",\n            Field = \"host\",\n            Match = \"is\",\n            Negate = false,\n            Pattern = \"example.com\",\n            RouteId = httpsredirect.Id,\n            ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\thttpsredirect, err := ovh.NewIPLoadbalancingHTTPRoute(ctx, \"httpsredirect\", \u0026ovh.IPLoadbalancingHTTPRouteArgs{\n\t\t\tAction: \u0026IPLoadbalancingHTTPRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"https://\", host, path, arguments)),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingHTTPRouteRule(ctx, \"examplerule\", \u0026ovh.IPLoadbalancingHTTPRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"host\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     httpsredirect.ID(),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nRule which match a specific header (same effect as the host match above).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst examplerule = new ovh.IPLoadbalancingHTTPRouteRule(\"examplerule\", {\n    displayName: \"Match example.com Host header\",\n    field: \"headers\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: ovh_iploadbalancing_http_route_httpsredirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    subField: \"Host\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nexamplerule = ovh.IPLoadbalancingHTTPRouteRule(\"examplerule\",\n    display_name=\"Match example.com Host header\",\n    field=\"headers\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=ovh_iploadbalancing_http_route[\"httpsredirect\"][\"id\"],\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    sub_field=\"Host\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var examplerule = new Ovh.IPLoadbalancingHTTPRouteRule(\"examplerule\", new Ovh.IPLoadbalancingHTTPRouteRuleArgs\n        {\n            DisplayName = \"Match example.com Host header\",\n            Field = \"headers\",\n            Match = \"is\",\n            Negate = false,\n            Pattern = \"example.com\",\n            RouteId = ovh_iploadbalancing_http_route.Httpsredirect.Id,\n            ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n            SubField = \"Host\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIPLoadbalancingHTTPRouteRule(ctx, \"examplerule\", \u0026ovh.IPLoadbalancingHTTPRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com Host header\"),\n\t\t\tField:       pulumi.String(\"headers\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     pulumi.Any(ovh_iploadbalancing_http_route.Httpsredirect.Id),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tSubField:    pulumi.String(\"Host\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingHTTPRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingRefresh:IPLoadbalancingRefresh": {
            "description": "Applies changes from other ovh_iploadbalancing_* resourcesto the production configuration of loadbalancers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmname = new ovh.IPLoadbalancingTCPFarm(\"farmname\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    port: 8080,\n    zone: \"all\",\n});\nconst backend = new ovh.IPLoadbalancingTCPFarmServer(\"backend\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    farmId: farmname.id,\n    displayName: \"mybackend\",\n    address: \"4.5.6.7\",\n    status: \"active\",\n    port: 80,\n    proxyProtocolVersion: v2,\n    weight: 2,\n    probe: true,\n    ssl: false,\n    backup: true,\n});\nconst mylb = new ovh.IPLoadbalancingRefresh(\"mylb\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    keepers: [[backend].map(__item =\u003e __item.address)],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.IPLoadbalancingTCPFarm(\"farmname\",\n    service_name=lb.id,\n    port=8080,\n    zone=\"all\")\nbackend = ovh.IPLoadbalancingTCPFarmServer(\"backend\",\n    service_name=lb.id,\n    farm_id=farmname.id,\n    display_name=\"mybackend\",\n    address=\"4.5.6.7\",\n    status=\"active\",\n    port=80,\n    proxy_protocol_version=v2,\n    weight=2,\n    probe=True,\n    ssl=False,\n    backup=True)\nmylb = ovh.IPLoadbalancingRefresh(\"mylb\",\n    service_name=lb.id,\n    keepers=[[__item.address for __item in [backend]]])\n```\n```csharp\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farmname = new Ovh.IPLoadbalancingTCPFarm(\"farmname\", new Ovh.IPLoadbalancingTCPFarmArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            Port = 8080,\n            Zone = \"all\",\n        });\n        var backend = new Ovh.IPLoadbalancingTCPFarmServer(\"backend\", new Ovh.IPLoadbalancingTCPFarmServerArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            FarmId = farmname.Id,\n            DisplayName = \"mybackend\",\n            Address = \"4.5.6.7\",\n            Status = \"active\",\n            Port = 80,\n            ProxyProtocolVersion = v2,\n            Weight = 2,\n            Probe = true,\n            Ssl = false,\n            Backup = true,\n        });\n        var mylb = new Ovh.IPLoadbalancingRefresh(\"mylb\", new Ovh.IPLoadbalancingRefreshArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            Keepers = \n            {\n                \n                {\n                    backend,\n                }.Select(__item =\u003e __item.Address).ToList(),\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger refresh, used also to form implicit dependencies\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "required": [
                "keepers",
                "serviceName"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger refresh, used also to form implicit dependencies\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingRefresh resources.\n",
                "properties": {
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values traccked to trigger refresh, used also to form implicit dependencies\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingTCPFarm:IPLoadbalancingTCPFarm": {
            "description": "Creates a backend server group (farm) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IPLoadbalancingTCPFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.id,\n    zone: \"GRA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.IPLoadbalancingTCPFarm(\"farmname\",\n    display_name=\"ingress-8080-gra\",\n    service_name=lb.id,\n    zone=\"GRA\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farmname = new Ovh.IPLoadbalancingTCPFarm(\"farmname\", new Ovh.IPLoadbalancingTCPFarmArgs\n        {\n            DisplayName = \"ingress-8080-gra\",\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            Zone = \"GRA\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingTCPFarm(ctx, \"farmname\", \u0026ovh.IPLoadbalancingTCPFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tZone:        pulumi.String(\"GRA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IPLoadbalancingTCPFarmProbe:IPLoadbalancingTCPFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IPLoadbalancingTCPFarmProbe:IPLoadbalancingTCPFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingTCPFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for backends to recieve traffic on.\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:index/IPLoadbalancingTCPFarmProbe:IPLoadbalancingTCPFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingTCPFarmServer:IPLoadbalancingTCPFarmServer": {
            "description": "Creates a backend server entry linked to loadbalancing group (farm)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmname = new ovh.IPLoadbalancingTCPFarm(\"farmname\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    port: 8080,\n    zone: \"all\",\n});\nconst backend = new ovh.IPLoadbalancingTCPFarmServer(\"backend\", {\n    serviceName: lb.then(lb =\u003e lb.id),\n    farmId: farmname.id,\n    displayName: \"mybackend\",\n    address: \"4.5.6.7\",\n    status: \"active\",\n    port: 80,\n    proxyProtocolVersion: v2,\n    weight: 2,\n    probe: true,\n    ssl: false,\n    backup: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.IPLoadbalancingTCPFarm(\"farmname\",\n    service_name=lb.id,\n    port=8080,\n    zone=\"all\")\nbackend = ovh.IPLoadbalancingTCPFarmServer(\"backend\",\n    service_name=lb.id,\n    farm_id=farmname.id,\n    display_name=\"mybackend\",\n    address=\"4.5.6.7\",\n    status=\"active\",\n    port=80,\n    proxy_protocol_version=v2,\n    weight=2,\n    probe=True,\n    ssl=False,\n    backup=True)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farmname = new Ovh.IPLoadbalancingTCPFarm(\"farmname\", new Ovh.IPLoadbalancingTCPFarmArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            Port = 8080,\n            Zone = \"all\",\n        });\n        var backend = new Ovh.IPLoadbalancingTCPFarmServer(\"backend\", new Ovh.IPLoadbalancingTCPFarmServerArgs\n        {\n            ServiceName = lb.Apply(lb =\u003e lb.Id),\n            FarmId = farmname.Id,\n            DisplayName = \"mybackend\",\n            Address = \"4.5.6.7\",\n            Status = \"active\",\n            Port = 80,\n            ProxyProtocolVersion = v2,\n            Weight = 2,\n            Probe = true,\n            Ssl = false,\n            Backup = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmname, err := ovh.NewIPLoadbalancingTCPFarm(ctx, \"farmname\", \u0026ovh.IPLoadbalancingTCPFarmArgs{\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tPort:        pulumi.Int(8080),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingTCPFarmServer(ctx, \"backend\", \u0026ovh.IPLoadbalancingTCPFarmServerArgs{\n\t\t\tServiceName:          pulumi.String(lb.Id),\n\t\t\tFarmId:               farmname.ID(),\n\t\t\tDisplayName:          pulumi.String(\"mybackend\"),\n\t\t\tAddress:              pulumi.String(\"4.5.6.7\"),\n\t\t\tStatus:               pulumi.String(\"active\"),\n\t\t\tPort:                 pulumi.Int(80),\n\t\t\tProxyProtocolVersion: pulumi.Any(v2),\n\t\t\tWeight:               pulumi.Int(2),\n\t\t\tProbe:                pulumi.Bool(true),\n\t\t\tSsl:                  pulumi.Bool(false),\n\t\t\tBackup:               pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingTCPFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVH network)\n"
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingTCPFrontend:IPLoadbalancingTCPFrontend": {
            "description": "Creates a backend server group (frontend) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.getIPLoadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IPLoadbalancingTCPFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IPLoadbalancingTCPFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.IPLoadbalancingTCPFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntestfrontend = ovh.IPLoadbalancingTCPFrontend(\"testfrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"ip-1.2.3.4\",\n            State = \"ok\",\n        }));\n        var farm80 = new Ovh.IPLoadbalancingTCPFarm(\"farm80\", new Ovh.IPLoadbalancingTCPFarmArgs\n        {\n            DisplayName = \"ingress-8080-gra\",\n            Port = 80,\n            ServiceName = lb.Apply(lb =\u003e lb.ServiceName),\n            Zone = \"all\",\n        });\n        var testfrontend = new Ovh.IPLoadbalancingTCPFrontend(\"testfrontend\", new Ovh.IPLoadbalancingTCPFrontendArgs\n        {\n            DefaultFarmId = farm80.Id,\n            DisplayName = \"ingress-8080-gra\",\n            Port = \"80,443\",\n            ServiceName = lb.Apply(lb =\u003e lb.ServiceName),\n            Zone = \"all\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := ovh.NewIPLoadbalancingTCPFarm(ctx, \"farm80\", \u0026ovh.IPLoadbalancingTCPFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIPLoadbalancingTCPFrontend(ctx, \"testfrontend\", \u0026ovh.IPLoadbalancingTCPFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:          pulumi.String(\"80,443\"),\n\t\t\tServiceName:   pulumi.String(lb.ServiceName),\n\t\t\tZone:          pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingTCPFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPLoadbalancingVRACNetwork:IPLoadbalancingVRACNetwork": {
            "description": "Manage a vrack network for your IP Loadbalancing service.\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                }
            },
            "required": [
                "natIp",
                "serviceName",
                "subnet",
                "vlan",
                "vrackNetworkId"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                }
            },
            "requiredInputs": [
                "natIp",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPLoadbalancingVRACNetwork resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "farmIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/iPReverse:IPReverse": {
            "description": "Provides a OVH IP reverse.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Set the reverse of an IP\nconst test = new ovh.IPReverse(\"test\", {\n    ip: \"192.0.2.0/24\",\n    ipreverse: \"192.0.2.1\",\n    reverse: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\n# Set the reverse of an IP\ntest = ovh.IPReverse(\"test\",\n    ip=\"192.0.2.0/24\",\n    ipreverse=\"192.0.2.1\",\n    reverse=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Set the reverse of an IP\n        var test = new Ovh.IPReverse(\"test\", new Ovh.IPReverseArgs\n        {\n            Ip = \"192.0.2.0/24\",\n            Ipreverse = \"192.0.2.1\",\n            Reverse = \"example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIPReverse(ctx, \"test\", \u0026ovh.IPReverseArgs{\n\t\t\tIp:        pulumi.String(\"192.0.2.0/24\"),\n\t\t\tIpreverse: pulumi.String(\"192.0.2.1\"),\n\t\t\tReverse:   pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n"
                },
                "ipreverse": {
                    "type": "string",
                    "description": "The IP to set the reverse of, default to `ip` if `ip` is a /32 (IPv4) or a /128 (IPv6)\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The value of the reverse\n"
                }
            },
            "required": [
                "ip",
                "reverse"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n"
                },
                "ipreverse": {
                    "type": "string",
                    "description": "The IP to set the reverse of, default to `ip` if `ip` is a /32 (IPv4) or a /128 (IPv6)\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The value of the reverse\n"
                }
            },
            "requiredInputs": [
                "ip",
                "reverse"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPReverse resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The IP block to which the IP belongs\n"
                    },
                    "ipreverse": {
                        "type": "string",
                        "description": "The IP to set the reverse of, default to `ip` if `ip` is a /32 (IPv4) or a /128 (IPv6)\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "The value of the reverse\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meIPXEScript:MeIPXEScript": {
            "description": "Creates an IPXE Script.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * from \"fs\";\n\nconst script = new ovh.MeIPXEScript(\"script\", {script: fs.readFileSync(`${path.module}/boot.ipxe`)});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nscript = ovh.MeIPXEScript(\"script\", script=(lambda path: open(path).read())(f\"{path['module']}/boot.ipxe\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var script = new Ovh.MeIPXEScript(\"script\", new Ovh.MeIPXEScriptArgs\n        {\n            Script = File.ReadAllText($\"{path.Module}/boot.ipxe\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewMeIPXEScript(ctx, \"script\", \u0026ovh.MeIPXEScriptArgs{\n\t\t\tScript: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/boot.ipxe\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPXE Script.\n"
                },
                "script": {
                    "type": "string",
                    "description": "The content of the script.\n"
                }
            },
            "required": [
                "description",
                "name",
                "script"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPXE Script.\n"
                },
                "script": {
                    "type": "string",
                    "description": "The content of the script.\n"
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeIPXEScript resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPXE Script.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "The content of the script.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplate:MeInstallationTemplate": {
            "description": "Use this resource to create a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = new ovh.MeInstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    defaultLanguage: \"fr\",\n    templateName: \"mytemplate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.MeInstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    default_language=\"fr\",\n    template_name=\"mytemplate\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytemplate = new Ovh.MeInstallationTemplate(\"mytemplate\", new Ovh.MeInstallationTemplateArgs\n        {\n            BaseTemplateName = \"centos7_64\",\n            DefaultLanguage = \"fr\",\n            TemplateName = \"mytemplate\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewMeInstallationTemplate(ctx, \"mytemplate\", \u0026ovh.MeInstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUse the following id format to import the resource `base_template_name/template_name` ",
            "properties": {
                "availableLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of all language available for this template\n"
                },
                "baseTemplateName": {
                    "type": "string",
                    "description": "OVH template name yours will be based on, choose one among the list given by compatibleTemplates function\n"
                },
                "beta": {
                    "type": "boolean",
                    "description": "This distribution is new and, although tested and functional, may still display odd behaviour\n"
                },
                "bitFormat": {
                    "type": "integer",
                    "description": "This template bit format (32 or 64)\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)\n"
                },
                "customization": {
                    "$ref": "#/types/ovh:index/MeInstallationTemplateCustomization:MeInstallationTemplateCustomization"
                },
                "defaultLanguage": {
                    "type": "string",
                    "description": "The default language of this template\n"
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "is this distribution deprecated\n"
                },
                "description": {
                    "type": "string",
                    "description": "information about this template\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "the distribution this template is based on\n"
                },
                "family": {
                    "type": "string",
                    "description": "this template family type (bsd,linux,solaris,windows)\n"
                },
                "filesystems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)\n"
                },
                "hardRaidConfiguration": {
                    "type": "boolean",
                    "description": "This distribution supports hardware raid configuration through the OVH API\n"
                },
                "lastModification": {
                    "type": "string",
                    "description": "Date of last modification of the base image\n"
                },
                "lvmReady": {
                    "type": "boolean",
                    "description": "This distribution supports Logical Volumes (Linux LVM)\n"
                },
                "removeDefaultPartitionSchemes": {
                    "type": "boolean",
                    "description": "Remove default partition schemes at creation\n"
                },
                "supportsDistributionKernel": {
                    "type": "boolean",
                    "description": "This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel\n"
                },
                "supportsGptLabel": {
                    "type": "boolean",
                    "description": "This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB\n"
                },
                "supportsRtm": {
                    "type": "boolean",
                    "description": "This distribution supports RTM software\n"
                },
                "supportsSqlServer": {
                    "type": "boolean",
                    "description": "This distribution supports the microsoft SQL server\n"
                },
                "supportsUefi": {
                    "type": "string",
                    "description": "This distribution supports UEFI setup (no,only,yes)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "required": [
                "availableLanguages",
                "baseTemplateName",
                "beta",
                "bitFormat",
                "category",
                "defaultLanguage",
                "deprecated",
                "description",
                "distribution",
                "family",
                "filesystems",
                "hardRaidConfiguration",
                "lastModification",
                "lvmReady",
                "removeDefaultPartitionSchemes",
                "supportsDistributionKernel",
                "supportsGptLabel",
                "supportsRtm",
                "supportsSqlServer",
                "supportsUefi",
                "templateName"
            ],
            "inputProperties": {
                "baseTemplateName": {
                    "type": "string",
                    "description": "OVH template name yours will be based on, choose one among the list given by compatibleTemplates function\n"
                },
                "customization": {
                    "$ref": "#/types/ovh:index/MeInstallationTemplateCustomization:MeInstallationTemplateCustomization"
                },
                "defaultLanguage": {
                    "type": "string",
                    "description": "The default language of this template\n"
                },
                "removeDefaultPartitionSchemes": {
                    "type": "boolean",
                    "description": "Remove default partition schemes at creation\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "requiredInputs": [
                "baseTemplateName",
                "defaultLanguage",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplate resources.\n",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of all language available for this template\n"
                    },
                    "baseTemplateName": {
                        "type": "string",
                        "description": "OVH template name yours will be based on, choose one among the list given by compatibleTemplates function\n"
                    },
                    "beta": {
                        "type": "boolean",
                        "description": "This distribution is new and, although tested and functional, may still display odd behaviour\n"
                    },
                    "bitFormat": {
                        "type": "integer",
                        "description": "This template bit format (32 or 64)\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)\n"
                    },
                    "customization": {
                        "$ref": "#/types/ovh:index/MeInstallationTemplateCustomization:MeInstallationTemplateCustomization"
                    },
                    "defaultLanguage": {
                        "type": "string",
                        "description": "The default language of this template\n"
                    },
                    "deprecated": {
                        "type": "boolean",
                        "description": "is this distribution deprecated\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "information about this template\n"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "the distribution this template is based on\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "this template family type (bsd,linux,solaris,windows)\n"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)\n"
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean",
                        "description": "This distribution supports hardware raid configuration through the OVH API\n"
                    },
                    "lastModification": {
                        "type": "string",
                        "description": "Date of last modification of the base image\n"
                    },
                    "lvmReady": {
                        "type": "boolean",
                        "description": "This distribution supports Logical Volumes (Linux LVM)\n"
                    },
                    "removeDefaultPartitionSchemes": {
                        "type": "boolean",
                        "description": "Remove default partition schemes at creation\n"
                    },
                    "supportsDistributionKernel": {
                        "type": "boolean",
                        "description": "This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel\n"
                    },
                    "supportsGptLabel": {
                        "type": "boolean",
                        "description": "This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB\n"
                    },
                    "supportsRtm": {
                        "type": "boolean",
                        "description": "This distribution supports RTM software\n"
                    },
                    "supportsSqlServer": {
                        "type": "boolean",
                        "description": "This distribution supports the microsoft SQL server\n"
                    },
                    "supportsUefi": {
                        "type": "string",
                        "description": "This distribution supports UEFI setup (no,only,yes)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "This template name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplatePartitionScheme:MeInstallationTemplatePartitionScheme": {
            "description": "Use this resource to create partition scheme for a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = new ovh.MeInstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    templateName: \"mytemplate\",\n    defaultLanguage: \"fr\",\n});\nconst scheme = new ovh.MeInstallationTemplatePartitionScheme(\"scheme\", {\n    templateName: mytemplate.templateName,\n    priority: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.MeInstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    template_name=\"mytemplate\",\n    default_language=\"fr\")\nscheme = ovh.MeInstallationTemplatePartitionScheme(\"scheme\",\n    template_name=mytemplate.template_name,\n    priority=1)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytemplate = new Ovh.MeInstallationTemplate(\"mytemplate\", new Ovh.MeInstallationTemplateArgs\n        {\n            BaseTemplateName = \"centos7_64\",\n            TemplateName = \"mytemplate\",\n            DefaultLanguage = \"fr\",\n        });\n        var scheme = new Ovh.MeInstallationTemplatePartitionScheme(\"scheme\", new Ovh.MeInstallationTemplatePartitionSchemeArgs\n        {\n            TemplateName = mytemplate.TemplateName,\n            Priority = 1,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmytemplate, err := ovh.NewMeInstallationTemplate(ctx, \"mytemplate\", \u0026ovh.MeInstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewMeInstallationTemplatePartitionScheme(ctx, \"scheme\", \u0026ovh.MeInstallationTemplatePartitionSchemeArgs{\n\t\t\tTemplateName: mytemplate.TemplateName,\n\t\t\tPriority:     pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUse the fake id format to import the resource `template_name/name` ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "required": [
                "name",
                "priority",
                "templateName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "requiredInputs": [
                "priority",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplatePartitionScheme resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "This template name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplatePartitionSchemeHardwareRaid:MeInstallationTemplatePartitionSchemeHardwareRaid": {
            "description": "Use this resource to create a hardware raid group in the partition scheme of a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = new ovh.MeInstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    templateName: \"mytemplate\",\n    defaultLanguage: \"fr\",\n});\nconst scheme = new ovh.MeInstallationTemplatePartitionScheme(\"scheme\", {\n    templateName: mytemplate.templateName,\n    priority: 1,\n});\nconst group1 = new ovh.MeInstallationTemplatePartitionSchemeHardwareRaid(\"group1\", {\n    templateName: scheme.templateName,\n    schemeName: scheme.name,\n    disks: [\n        \"[c1:d1,c1:d2,c1:d3]\",\n        \"[c1:d10,c1:d20,c1:d30]\",\n    ],\n    mode: \"raid50\",\n    step: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.MeInstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    template_name=\"mytemplate\",\n    default_language=\"fr\")\nscheme = ovh.MeInstallationTemplatePartitionScheme(\"scheme\",\n    template_name=mytemplate.template_name,\n    priority=1)\ngroup1 = ovh.MeInstallationTemplatePartitionSchemeHardwareRaid(\"group1\",\n    template_name=scheme.template_name,\n    scheme_name=scheme.name,\n    disks=[\n        \"[c1:d1,c1:d2,c1:d3]\",\n        \"[c1:d10,c1:d20,c1:d30]\",\n    ],\n    mode=\"raid50\",\n    step=1)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytemplate = new Ovh.MeInstallationTemplate(\"mytemplate\", new Ovh.MeInstallationTemplateArgs\n        {\n            BaseTemplateName = \"centos7_64\",\n            TemplateName = \"mytemplate\",\n            DefaultLanguage = \"fr\",\n        });\n        var scheme = new Ovh.MeInstallationTemplatePartitionScheme(\"scheme\", new Ovh.MeInstallationTemplatePartitionSchemeArgs\n        {\n            TemplateName = mytemplate.TemplateName,\n            Priority = 1,\n        });\n        var group1 = new Ovh.MeInstallationTemplatePartitionSchemeHardwareRaid(\"group1\", new Ovh.MeInstallationTemplatePartitionSchemeHardwareRaidArgs\n        {\n            TemplateName = scheme.TemplateName,\n            SchemeName = scheme.Name,\n            Disks = \n            {\n                \"[c1:d1,c1:d2,c1:d3]\",\n                \"[c1:d10,c1:d20,c1:d30]\",\n            },\n            Mode = \"raid50\",\n            Step = 1,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmytemplate, err := ovh.NewMeInstallationTemplate(ctx, \"mytemplate\", \u0026ovh.MeInstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscheme, err := ovh.NewMeInstallationTemplatePartitionScheme(ctx, \"scheme\", \u0026ovh.MeInstallationTemplatePartitionSchemeArgs{\n\t\t\tTemplateName: mytemplate.TemplateName,\n\t\t\tPriority:     pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewMeInstallationTemplatePartitionSchemeHardwareRaid(ctx, \"group1\", \u0026ovh.MeInstallationTemplatePartitionSchemeHardwareRaidArgs{\n\t\t\tTemplateName: scheme.TemplateName,\n\t\t\tSchemeName:   scheme.Name,\n\t\t\tDisks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"[c1:d1,c1:d2,c1:d3]\"),\n\t\t\t\tpulumi.String(\"[c1:d10,c1:d20,c1:d30]\"),\n\t\t\t},\n\t\t\tMode: pulumi.String(\"raid50\"),\n\t\t\tStep: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUse the fake id format to import the resource `template_name/scheme_name/name`. ",
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                },
                "mode": {
                    "type": "string",
                    "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hardware RAID name\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Specifies the creation order of the hardware RAID\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "required": [
                "disks",
                "mode",
                "name",
                "schemeName",
                "step",
                "templateName"
            ],
            "inputProperties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                },
                "mode": {
                    "type": "string",
                    "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hardware RAID name\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Specifies the creation order of the hardware RAID\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "requiredInputs": [
                "disks",
                "mode",
                "schemeName",
                "step",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplatePartitionSchemeHardwareRaid resources.\n",
                "properties": {
                    "disks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Hardware RAID name\n"
                    },
                    "schemeName": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "step": {
                        "type": "integer",
                        "description": "Specifies the creation order of the hardware RAID\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplatePartitionSchemePartition:MeInstallationTemplatePartitionSchemePartition": {
            "description": "Use this resource to create a partition in the partition scheme of a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = new ovh.MeInstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    templateName: \"mytemplate\",\n    defaultLanguage: \"fr\",\n});\nconst scheme = new ovh.MeInstallationTemplatePartitionScheme(\"scheme\", {\n    templateName: mytemplate.templateName,\n    priority: 1,\n});\nconst root = new ovh.MeInstallationTemplatePartitionSchemePartition(\"root\", {\n    templateName: scheme.templateName,\n    schemeName: scheme.name,\n    mountpoint: \"/\",\n    filesystem: \"ext4\",\n    size: \"400\",\n    order: 1,\n    type: \"primary\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.MeInstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    template_name=\"mytemplate\",\n    default_language=\"fr\")\nscheme = ovh.MeInstallationTemplatePartitionScheme(\"scheme\",\n    template_name=mytemplate.template_name,\n    priority=1)\nroot = ovh.MeInstallationTemplatePartitionSchemePartition(\"root\",\n    template_name=scheme.template_name,\n    scheme_name=scheme.name,\n    mountpoint=\"/\",\n    filesystem=\"ext4\",\n    size=400,\n    order=1,\n    type=\"primary\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytemplate = new Ovh.MeInstallationTemplate(\"mytemplate\", new Ovh.MeInstallationTemplateArgs\n        {\n            BaseTemplateName = \"centos7_64\",\n            TemplateName = \"mytemplate\",\n            DefaultLanguage = \"fr\",\n        });\n        var scheme = new Ovh.MeInstallationTemplatePartitionScheme(\"scheme\", new Ovh.MeInstallationTemplatePartitionSchemeArgs\n        {\n            TemplateName = mytemplate.TemplateName,\n            Priority = 1,\n        });\n        var root = new Ovh.MeInstallationTemplatePartitionSchemePartition(\"root\", new Ovh.MeInstallationTemplatePartitionSchemePartitionArgs\n        {\n            TemplateName = scheme.TemplateName,\n            SchemeName = scheme.Name,\n            Mountpoint = \"/\",\n            Filesystem = \"ext4\",\n            Size = 400,\n            Order = 1,\n            Type = \"primary\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmytemplate, err := ovh.NewMeInstallationTemplate(ctx, \"mytemplate\", \u0026ovh.MeInstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscheme, err := ovh.NewMeInstallationTemplatePartitionScheme(ctx, \"scheme\", \u0026ovh.MeInstallationTemplatePartitionSchemeArgs{\n\t\t\tTemplateName: mytemplate.TemplateName,\n\t\t\tPriority:     pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewMeInstallationTemplatePartitionSchemePartition(ctx, \"root\", \u0026ovh.MeInstallationTemplatePartitionSchemePartitionArgs{\n\t\t\tTemplateName: scheme.TemplateName,\n\t\t\tSchemeName:   scheme.Name,\n\t\t\tMountpoint:   pulumi.String(\"/\"),\n\t\t\tFilesystem:   pulumi.String(\"ext4\"),\n\t\t\tSize:         pulumi.Int(400),\n\t\t\tOrder:        pulumi.Int(1),\n\t\t\tType:         pulumi.String(\"primary\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUse the fake id format to import the resource `template_name/scheme_name/mountpoint` (example\"mytemplate/myscheme//\"). ",
            "properties": {
                "filesystem": {
                    "type": "string",
                    "description": "Partition filesystem\n"
                },
                "mountpoint": {
                    "type": "string",
                    "description": "partition mount point\n"
                },
                "order": {
                    "type": "integer",
                    "description": "step or order. specifies the creation order of the partition on the disk\n"
                },
                "raid": {
                    "type": "string",
                    "description": "raid partition type\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                },
                "type": {
                    "type": "string",
                    "description": "partition type\n"
                },
                "volumeName": {
                    "type": "string",
                    "description": "The volume name needed for proxmox distribution\n"
                }
            },
            "required": [
                "filesystem",
                "mountpoint",
                "order",
                "raid",
                "schemeName",
                "size",
                "templateName",
                "type",
                "volumeName"
            ],
            "inputProperties": {
                "filesystem": {
                    "type": "string",
                    "description": "Partition filesystem\n"
                },
                "mountpoint": {
                    "type": "string",
                    "description": "partition mount point\n"
                },
                "order": {
                    "type": "integer",
                    "description": "step or order. specifies the creation order of the partition on the disk\n"
                },
                "raid": {
                    "type": "string",
                    "description": "raid partition type\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                },
                "type": {
                    "type": "string",
                    "description": "partition type\n"
                },
                "volumeName": {
                    "type": "string",
                    "description": "The volume name needed for proxmox distribution\n"
                }
            },
            "requiredInputs": [
                "filesystem",
                "mountpoint",
                "order",
                "schemeName",
                "size",
                "templateName",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplatePartitionSchemePartition resources.\n",
                "properties": {
                    "filesystem": {
                        "type": "string",
                        "description": "Partition filesystem\n"
                    },
                    "mountpoint": {
                        "type": "string",
                        "description": "partition mount point\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "step or order. specifies the creation order of the partition on the disk\n"
                    },
                    "raid": {
                        "type": "string",
                        "description": "raid partition type\n"
                    },
                    "schemeName": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "partition type\n"
                    },
                    "volumeName": {
                        "type": "string",
                        "description": "The volume name needed for proxmox distribution\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meSSHKey:MeSSHKey": {
            "description": "Creates an SSH Key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykey = new ovh.MeSSHKey(\"mykey\", {\n    key: \"ssh-ed25519 AAAAC3...\",\n    keyName: \"mykey\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmykey = ovh.MeSSHKey(\"mykey\",\n    key=\"ssh-ed25519 AAAAC3...\",\n    key_name=\"mykey\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mykey = new Ovh.MeSSHKey(\"mykey\", new Ovh.MeSSHKeyArgs\n        {\n            Key = \"ssh-ed25519 AAAAC3...\",\n            KeyName = \"mykey\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewMeSSHKey(ctx, \"mykey\", \u0026ovh.MeSSHKeyArgs{\n\t\t\tKey:     pulumi.String(\"ssh-ed25519 AAAAC3...\"),\n\t\t\tKeyName: pulumi.String(\"mykey\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The friendly name of this SSH key.\n"
                }
            },
            "required": [
                "default",
                "key",
                "keyName"
            ],
            "inputProperties": {
                "default": {
                    "type": "boolean",
                    "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The friendly name of this SSH key.\n"
                }
            },
            "requiredInputs": [
                "key",
                "keyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeSSHKey resources.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The friendly name of this SSH key.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/pubicCloudPrivateNetwork:PubicCloudPrivateNetwork": {
            "description": "\u003e __DEPRECATED:__ Use `ovh.CloudNetworkPrivate` instead.\n\nCreates a private network in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst net = new ovh.PubicCloudPrivateNetwork(\"net\", {\n    projectId: \"67890\",\n    regions: [\n        \"GRA1\",\n        \"BHS1\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnet = ovh.PubicCloudPrivateNetwork(\"net\",\n    project_id=\"67890\",\n    regions=[\n        \"GRA1\",\n        \"BHS1\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var net = new Ovh.PubicCloudPrivateNetwork(\"net\", new Ovh.PubicCloudPrivateNetworkArgs\n        {\n            ProjectId = \"67890\",\n            Regions = \n            {\n                \"GRA1\",\n                \"BHS1\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewPubicCloudPrivateNetwork(ctx, \"net\", \u0026ovh.PubicCloudPrivateNetworkArgs{\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t\tRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"GRA1\"),\n\t\t\t\tpulumi.String(\"BHS1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "regionsStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/PubicCloudPrivateNetworkRegionsStatus:PubicCloudPrivateNetworkRegionsStatus"
                    },
                    "description": "A map representing the status of the network per region.\n* `regions_status/region` - The id of the region.\n* `regions_status/status` - The status of the network in the region.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "the type of the network. Either 'private' or 'public'.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                }
            },
            "required": [
                "name",
                "projectId",
                "regions",
                "regionsStatuses",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PubicCloudPrivateNetwork resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                    },
                    "regionsStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/PubicCloudPrivateNetworkRegionsStatus:PubicCloudPrivateNetworkRegionsStatus"
                        },
                        "description": "A map representing the status of the network per region.\n* `regions_status/region` - The id of the region.\n* `regions_status/status` - The status of the network in the region.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the network. Either 'private' or 'public'.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/pubicCloudPrivateNetworkSubnet:PubicCloudPrivateNetworkSubnet": {
            "description": "\u003e __DEPRECATED:__ Use `ovh.CloudNetworkPrivateSubnet` instead.\n\nCreates a subnet in a private network of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subnet = new ovh.PubicCloudPrivateNetworkSubnet(\"subnet\", {\n    dhcp: true,\n    end: \"192.168.168.200\",\n    network: \"192.168.168.0/24\",\n    networkId: \"0234543\",\n    noGateway: false,\n    projectId: \"67890\",\n    region: \"GRA1\",\n    start: \"192.168.168.100\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubnet = ovh.PubicCloudPrivateNetworkSubnet(\"subnet\",\n    dhcp=True,\n    end=\"192.168.168.200\",\n    network=\"192.168.168.0/24\",\n    network_id=\"0234543\",\n    no_gateway=False,\n    project_id=\"67890\",\n    region=\"GRA1\",\n    start=\"192.168.168.100\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var subnet = new Ovh.PubicCloudPrivateNetworkSubnet(\"subnet\", new Ovh.PubicCloudPrivateNetworkSubnetArgs\n        {\n            Dhcp = true,\n            End = \"192.168.168.200\",\n            Network = \"192.168.168.0/24\",\n            NetworkId = \"0234543\",\n            NoGateway = false,\n            ProjectId = \"67890\",\n            Region = \"GRA1\",\n            Start = \"192.168.168.100\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewPubicCloudPrivateNetworkSubnet(ctx, \"subnet\", \u0026ovh.PubicCloudPrivateNetworkSubnetArgs{\n\t\t\tDhcp:      pulumi.Bool(true),\n\t\t\tEnd:       pulumi.String(\"192.168.168.200\"),\n\t\t\tNetwork:   pulumi.String(\"192.168.168.0/24\"),\n\t\t\tNetworkId: pulumi.String(\"0234543\"),\n\t\t\tNoGateway: pulumi.Bool(false),\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t\tRegion:    pulumi.String(\"GRA1\"),\n\t\t\tStart:     pulumi.String(\"192.168.168.100\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Ip Block representing the subnet cidr.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The IP of the gateway\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/PubicCloudPrivateNetworkSubnetIpPool:PubicCloudPrivateNetworkSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nChanging this forces a new resource to be created.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                }
            },
            "required": [
                "cidr",
                "end",
                "gatewayIp",
                "ipPools",
                "network",
                "networkId",
                "projectId",
                "region",
                "start"
            ],
            "inputProperties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nChanging this forces a new resource to be created.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                }
            },
            "requiredInputs": [
                "end",
                "network",
                "networkId",
                "projectId",
                "region",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PubicCloudPrivateNetworkSubnet resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Ip Block representing the subnet cidr.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                    },
                    "end": {
                        "type": "string",
                        "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway\n"
                    },
                    "ipPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/PubicCloudPrivateNetworkSubnetIpPool:PubicCloudPrivateNetworkSubnetIpPool"
                        },
                        "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                    },
                    "noGateway": {
                        "type": "boolean",
                        "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nChanging this forces a new resource to be created.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                    },
                    "start": {
                        "type": "string",
                        "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/publicCloudUser:PublicCloudUser": {
            "description": "\u003e __DEPRECATED:__ Use `ovh.CloudUser` instead.\n\nCreates a user in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user1 = new ovh.PublicCloudUser(\"user1\", {\n    projectId: \"67890\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser1 = ovh.PublicCloudUser(\"user1\", project_id=\"67890\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user1 = new Ovh.PublicCloudUser(\"user1\", new Ovh.PublicCloudUserArgs\n        {\n            ProjectId = \"67890\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewPublicCloudUser(ctx, \"user1\", \u0026ovh.PublicCloudUserArgs{\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "roleName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/PublicCloudUserRole:PublicCloudUserRole"
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n"
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                }
            },
            "required": [
                "creationDate",
                "openstackRc",
                "password",
                "roles",
                "status",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "roleName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PublicCloudUser resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n"
                    },
                    "openstackRc": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/PublicCloudUserRole:PublicCloudUserRole"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vRACCloudProject:VRACCloudProject": {
            "description": "Attach a Public Cloud Project to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vcp = new ovh.VRACCloudProject(\"vcp\", {\n    projectId: \"67890\",\n    vrackId: \"12345\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvcp = ovh.VRACCloudProject(\"vcp\",\n    project_id=\"67890\",\n    vrack_id=\"12345\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vcp = new Ovh.VRACCloudProject(\"vcp\", new Ovh.VRACCloudProjectArgs\n        {\n            ProjectId = \"67890\",\n            VrackId = \"12345\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVRACCloudProject(ctx, \"vcp\", \u0026ovh.VRACCloudProjectArgs{\n\t\t\tProjectId: pulumi.String(\"67890\"),\n\t\t\tVrackId:   pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nNote: The use of environment variable is deprecated.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted, the `OVH_VRACK_ID`\nenvironment variable is used.\nNote: The use of environment variable is deprecated.\n"
                }
            },
            "required": [
                "projectId",
                "vrackId"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nNote: The use of environment variable is deprecated.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted, the `OVH_VRACK_ID`\nenvironment variable is used.\nNote: The use of environment variable is deprecated.\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "vrackId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VRACCloudProject resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\nNote: The use of environment variable is deprecated.\n"
                    },
                    "vrackId": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted, the `OVH_VRACK_ID`\nenvironment variable is used.\nNote: The use of environment variable is deprecated.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vRACDedicatedServer:VRACDedicatedServer": {
            "description": "Attach a dedicated server to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vds = new ovh.VRACDedicatedServer(\"vds\", {\n    serverId: \"67890\",\n    vrackId: \"12345\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvds = ovh.VRACDedicatedServer(\"vds\",\n    server_id=\"67890\",\n    vrack_id=\"12345\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vds = new Ovh.VRACDedicatedServer(\"vds\", new Ovh.VRACDedicatedServerArgs\n        {\n            ServerId = \"67890\",\n            VrackId = \"12345\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVRACDedicatedServer(ctx, \"vds\", \u0026ovh.VRACDedicatedServerArgs{\n\t\t\tServerId: pulumi.String(\"67890\"),\n\t\t\tVrackId:  pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "required": [
                "serverId",
                "vrackId"
            ],
            "inputProperties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "requiredInputs": [
                "serverId",
                "vrackId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VRACDedicatedServer resources.\n",
                "properties": {
                    "serverId": {
                        "type": "string",
                        "description": "The id of the dedicated server.\n"
                    },
                    "vrackId": {
                        "type": "string",
                        "description": "The id of the vrack.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vRACDedicatedServerInterface:VRACDedicatedServerInterface": {
            "description": "Attach a Dedicated Server Network Interface to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vdsi = new ovh.VRACDedicatedServerInterface(\"vdsi\", {\n    interfaceId: \"67890\",\n    vrackId: \"12345\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvdsi = ovh.VRACDedicatedServerInterface(\"vdsi\",\n    interface_id=\"67890\",\n    vrack_id=\"12345\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vdsi = new Ovh.VRACDedicatedServerInterface(\"vdsi\", new Ovh.VRACDedicatedServerInterfaceArgs\n        {\n            InterfaceId = \"67890\",\n            VrackId = \"12345\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVRACDedicatedServerInterface(ctx, \"vdsi\", \u0026ovh.VRACDedicatedServerInterfaceArgs{\n\t\t\tInterfaceId: pulumi.String(\"67890\"),\n\t\t\tVrackId:     pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "required": [
                "interfaceId",
                "vrackId"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "requiredInputs": [
                "interfaceId",
                "vrackId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VRACDedicatedServerInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "description": "The id of dedicated server network interface.\n"
                    },
                    "vrackId": {
                        "type": "string",
                        "description": "The id of the vrack.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vRACIPLoadbalancing:VRACIPLoadbalancing": {
            "description": "Attach a ip loadbalancing to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst viplb = new ovh.VRACIPLoadbalancing(\"viplb\", {\n    ipLoadbalancing: \"yyy\",\n    serviceName: \"xxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nviplb = ovh.VRACIPLoadbalancing(\"viplb\",\n    ip_loadbalancing=\"yyy\",\n    service_name=\"xxx\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var viplb = new Ovh.VRACIPLoadbalancing(\"viplb\", new Ovh.VRACIPLoadbalancingArgs\n        {\n            IpLoadbalancing = \"yyy\",\n            ServiceName = \"xxx\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVRACIPLoadbalancing(ctx, \"viplb\", \u0026ovh.VRACIPLoadbalancingArgs{\n\t\t\tIpLoadbalancing: pulumi.String(\"yyy\"),\n\t\t\tServiceName:     pulumi.String(\"xxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "The id of the ip loadbalancing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "required": [
                "ipLoadbalancing",
                "serviceName"
            ],
            "inputProperties": {
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "The id of the ip loadbalancing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "requiredInputs": [
                "ipLoadbalancing",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VRACIPLoadbalancing resources.\n",
                "properties": {
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "The id of the ip loadbalancing.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vRACPublicCloudAttachment:VRACPublicCloudAttachment": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted, the `OVH_VRACK_ID`\nenvironment variable is used.\n"
                }
            },
            "required": [
                "projectId",
                "vrackId"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                },
                "vrackId": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted, the `OVH_VRACK_ID`\nenvironment variable is used.\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "vrackId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VRACPublicCloudAttachment resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    },
                    "vrackId": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted, the `OVH_VRACK_ID`\nenvironment variable is used.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ovh:index/getCloudRegion:getCloudRegion": {
            "description": "Use this data source to retrieve information about a region associated with a\npublic cloud project. The region must be associated with the project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst gRA1 = pulumi.output(ovh.getCloudRegion({\n    name: \"GRA1\",\n    projectId: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ng_ra1 = ovh.get_cloud_region(name=\"GRA1\",\n    project_id=\"XXXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gRA1 = Output.Create(Ovh.GetCloudRegion.InvokeAsync(new Ovh.GetCloudRegionArgs\n        {\n            Name = \"GRA1\",\n            ProjectId = \"XXXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetCloudRegion(ctx, \u0026GetCloudRegionArgs{\n\t\t\tName:      \"GRA1\",\n\t\t\tProjectId: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudRegion.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the region associated with the public cloud\nproject.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudRegion.\n",
                "properties": {
                    "continentCode": {
                        "type": "string",
                        "description": "the code of the geographic continent the region is running.\nE.g.: EU for Europe, US for America...\n"
                    },
                    "datacenterLocation": {
                        "type": "string",
                        "description": "The location code of the datacenter.\nE.g.: \"GRA\", meaning Gravelines, for region \"GRA1\"\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the public cloud service\n"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudRegionService:getCloudRegionService"
                        },
                        "description": "The list of public cloud services running within the region\n"
                    }
                },
                "type": "object",
                "required": [
                    "continentCode",
                    "continentCode",
                    "datacenterLocation",
                    "datacenterLocation",
                    "name",
                    "projectId",
                    "services",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudRegions:getCloudRegions": {
            "description": "Use this data source to get the regions of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regions = pulumi.output(ovh.getCloudRegions({\n    hasServicesUps: [\"network\"],\n    projectId: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregions = ovh.get_cloud_regions(has_services_ups=[\"network\"],\n    project_id=\"XXXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var regions = Output.Create(Ovh.GetCloudRegions.InvokeAsync(new Ovh.GetCloudRegionsArgs\n        {\n            HasServicesUps = \n            {\n                \"network\",\n            },\n            ProjectId = \"XXXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetCloudRegions(ctx, \u0026GetCloudRegionsArgs{\n\t\t\tHasServicesUps: []string{\n\t\t\t\t\"network\",\n\t\t\t},\n\t\t\tProjectId: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of services which has to be UP in regions.\nExample: \"image\", \"instance\", \"network\", \"storage\", \"volume\", \"workflow\", ...\nIf left blank, returns all regions associated with the project_id.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of regions associated with the project, filtered by services UP.\n"
                    },
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "projectId",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedCEPH:getDedicatedCEPH": {
            "description": "Use this data source to retrieve information about a dedicated CEPH. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_ceph = pulumi.output(ovh.getDedicatedCEPH({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.get_dedicated_ceph(service_name=\"XXXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_ceph = Output.Create(Ovh.GetDedicatedCEPH.InvokeAsync(new Ovh.GetDedicatedCEPHArgs\n        {\n            ServiceName = \"XXXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedCEPH(ctx, \u0026GetDedicatedCEPHArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDedicatedCEPH.\n",
                "properties": {
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the dedicated CEPH cluster.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDedicatedCEPH.\n",
                "properties": {
                    "cephMons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of CEPH monitors IPs\n"
                    },
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "crushTunables": {
                        "type": "string",
                        "description": "CRUSH algorithm settings. Possible values\n* OPTIMAL\n* DEFAULT\n* LEGACY\n* BOBTAIL\n* ARGONAUT\n* FIREFLY\n* HAMMER\n* JEWEL\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "CEPH cluster label\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "cluster region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number",
                        "description": "Cluster size in TB\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state of the cluster\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "cephMons",
                    "cephVersion",
                    "crushTunables",
                    "label",
                    "region",
                    "serviceName",
                    "size",
                    "state",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedInstallationTemplates:getDedicatedInstallationTemplates": {
            "description": "Use this data source to get the list of installation templates available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = pulumi.output(ovh.getDedicatedInstallationTemplates());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntemplates = ovh.get_dedicated_installation_templates()\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var templates = Output.Create(Ovh.GetDedicatedInstallationTemplates.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedInstallationTemplates(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getDedicatedInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedServer:getDedicatedServer": {
            "description": "Use this data source to retrieve information about a dedicated server associated with \nyour OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = pulumi.output(ovh.getDedicatedServer({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_dedicated_server(service_name=\"XXXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var server = Output.Create(Ovh.GetDedicatedServer.InvokeAsync(new Ovh.GetDedicatedServerArgs\n        {\n            ServiceName = \"XXXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedServer(ctx, \u0026GetDedicatedServerArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDedicatedServer.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDedicatedServer.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "dedicater server commercial range\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "dedicated datacenter localisation (bhs1,bhs2,...)\n"
                    },
                    "enabledPublicVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled public VNI uuids\n"
                    },
                    "enabledVrackAggregationVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack_aggregation VNI uuids\n"
                    },
                    "enabledVrackVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack VNI uuids\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "dedicated server ip (IPv4)\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "dedicated server ip blocks\n"
                    },
                    "linkSpeed": {
                        "type": "integer",
                        "description": "link speed of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User defined VirtualNetworkInterface name\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system\n"
                    },
                    "professionalUse": {
                        "type": "boolean",
                        "description": "Does this server have professional use option\n"
                    },
                    "rack": {
                        "type": "string",
                        "description": "rack id of the server\n"
                    },
                    "rescueMail": {
                        "type": "string",
                        "description": "rescue mail of the server\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "dedicated server reverse\n"
                    },
                    "rootDevice": {
                        "type": "string",
                        "description": "root device of the server\n"
                    },
                    "serverId": {
                        "type": "integer",
                        "description": "your server id\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    },
                    "supportLevel": {
                        "type": "string",
                        "description": "Dedicated server support level (critical, fastpath, gs, pro)\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getDedicatedServerVni:getDedicatedServerVni"
                        },
                        "description": "the list of Virtualnetworkinterface assiociated with this server\n"
                    }
                },
                "type": "object",
                "required": [
                    "bootId",
                    "commercialRange",
                    "datacenter",
                    "enabledPublicVnis",
                    "enabledVrackAggregationVnis",
                    "enabledVrackVnis",
                    "ip",
                    "ips",
                    "linkSpeed",
                    "monitoring",
                    "name",
                    "os",
                    "professionalUse",
                    "rack",
                    "rescueMail",
                    "reverse",
                    "rootDevice",
                    "serverId",
                    "serviceName",
                    "state",
                    "supportLevel",
                    "vnis",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedServerBoots:getDedicatedServerBoots": {
            "description": "Use this data source to get the list of compatible netboots for a dedicated server associated with your OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst netboots = pulumi.output(ovh.getDedicatedServerBoots({\n    bootType: \"harddisk\",\n    serviceName: \"myserver\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnetboots = ovh.get_dedicated_server_boots(boot_type=\"harddisk\",\n    service_name=\"myserver\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var netboots = Output.Create(Ovh.GetDedicatedServerBoots.InvokeAsync(new Ovh.GetDedicatedServerBootsArgs\n        {\n            BootType = \"harddisk\",\n            ServiceName = \"myserver\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedServerBoots(ctx, \u0026GetDedicatedServerBootsArgs{\n\t\t\tBootType:    pulumi.StringRef(\"harddisk\"),\n\t\t\tServiceName: \"myserver\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDedicatedServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string",
                        "description": "Filter the value of bootType property (harddisk, rescue, ipxeCustomerScript, internal, network)\n"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDedicatedServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dedicated server netboots.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedServers:getDedicatedServers": {
            "description": "Use this data source to get the list of dedicated servers associated with your OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst servers = pulumi.output(ovh.getDedicatedServers());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nservers = ovh.get_dedicated_servers()\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var servers = Output.Create(Ovh.GetDedicatedServers.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedServers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getDedicatedServers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of dedicated servers IDs associated with your OVH Account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getDomainZone:getDomainZone": {
            "description": "Use this data source to retrieve information about a domain zone.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rootzone = pulumi.output(ovh.getDomainZone({\n    name: \"mysite.ovh\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrootzone = ovh.get_domain_zone(name=\"mysite.ovh\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var rootzone = Output.Create(Ovh.GetDomainZone.InvokeAsync(new Ovh.GetDomainZoneArgs\n        {\n            Name = \"mysite.ovh\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDomainZone(ctx, \u0026GetDomainZoneArgs{\n\t\t\tName: \"mysite.ovh\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDomainZone.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the domain zone.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomainZone.\n",
                "properties": {
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    }
                },
                "type": "object",
                "required": [
                    "dnssecSupported",
                    "hasDnsAnycast",
                    "lastUpdate",
                    "name",
                    "nameServers",
                    "id"
                ]
            }
        },
        "ovh:index/getIPLoadbalancing:getIPLoadbalancing": {
            "description": "Use this data source to retrieve information about an IP Load Balancing product\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.getIPLoadbalancing({\n    serviceName: \"xxx\",\n    state: \"ok\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.get_ip_loadbalancing(service_name=\"xxx\",\n    state=\"ok\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lb = Output.Create(Ovh.GetIPLoadbalancing.InvokeAsync(new Ovh.GetIPLoadbalancingArgs\n        {\n            ServiceName = \"xxx\",\n            State = \"ok\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetIPLoadbalancing(ctx, \u0026GetIPLoadbalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"xxx\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIPLoadbalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30,\nIE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8.\nIntermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5,\nSafari 1, Windows XP IE8, Android 2.3, Java 7.\nCan take any of the following value: \"intermediate\", \"modern\"\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP. Can take any of the following value:\n\"blacklisted\", \"deleted\", \"free\", \"ok\", \"quarantined\", \"suspended\"\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility. Takes a boolean value.\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is\nattached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is. This takes an array of values.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIPLoadbalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string"
                    },
                    "ipv4": {
                        "type": "string"
                    },
                    "ipv6": {
                        "type": "string"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing\nThis attribute is sensitive.\n"
                    },
                    "offer": {
                        "type": "string"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getIPLoadbalancingOrderableZone:getIPLoadbalancingOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sslConfiguration": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vrackEligibility": {
                        "type": "boolean"
                    },
                    "vrackName": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "ipLoadbalancing",
                    "ipv4",
                    "ipv6",
                    "metricsToken",
                    "offer",
                    "orderableZones",
                    "serviceName",
                    "sslConfiguration",
                    "state",
                    "vrackEligibility",
                    "vrackName",
                    "zones",
                    "id"
                ]
            }
        },
        "ovh:index/getIPLoadbalancingVRACNetwork:getIPLoadbalancingVRACNetwork": {
            "description": "Use this data source to get the details of Vrack network available for your IPLoadbalancer associated with your OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetwork = pulumi.output(ovh.getIPLoadbalancingVRACNetwork({\n    serviceName: \"xxx\",\n    vrackNetworkId: Number.parseFloat(\"yyy\"),\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_network = ovh.get_ip_loadbalancing_vrac_network(service_name=\"xxx\",\n    vrack_network_id=\"yyy\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lbNetwork = Output.Create(Ovh.GetIPLoadbalancingVRACNetwork.InvokeAsync(new Ovh.GetIPLoadbalancingVRACNetworkArgs\n        {\n            ServiceName = \"xxx\",\n            VrackNetworkId = \"yyy\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupIPLoadbalancingVRACNetwork(ctx, \u0026GetIPLoadbalancingVRACNetworkArgs{\n\t\t\tServiceName:    \"xxx\",\n\t\t\tVrackNetworkId: \"yyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIPLoadbalancingVRACNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "vrackNetworkId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIPLoadbalancingVRACNetwork.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "natIp",
                    "serviceName",
                    "subnet",
                    "vlan",
                    "vrackNetworkId",
                    "id"
                ]
            }
        },
        "ovh:index/getIPLoadbalancingVRACNetworks:getIPLoadbalancingVRACNetworks": {
            "description": "Use this data source to get the list of Vrack network ids available for your IPLoadbalancer associated with your OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetworks = pulumi.output(ovh.getIPLoadbalancingVRACNetworks({\n    serviceName: \"xxx\",\n    subnet: \"10.0.0.0/24\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_networks = ovh.get_ip_loadbalancing_vrac_networks(service_name=\"xxx\",\n    subnet=\"10.0.0.0/24\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var lbNetworks = Output.Create(Ovh.GetIPLoadbalancingVRACNetworks.InvokeAsync(new Ovh.GetIPLoadbalancingVRACNetworksArgs\n        {\n            ServiceName = \"xxx\",\n            Subnet = \"10.0.0.0/24\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetIPLoadbalancingVRACNetworks(ctx, \u0026GetIPLoadbalancingVRACNetworksArgs{\n\t\t\tServiceName: \"xxx\",\n\t\t\tSubnet:      pulumi.StringRef(\"10.0.0.0/24\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIPLoadbalancingVRACNetworks.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "Filters networks on the subnet.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "Filters networks on the vlan id.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIPLoadbalancingVRACNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of vrack network ids.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getMeIPXEScript:getMeIPXEScript": {
            "description": "Use this data source to retrieve information about an IPXE Script.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst script = pulumi.output(ovh.getMeIPXEScript({\n    name: \"myscript\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nscript = ovh.get_me_ipxe_script(name=\"myscript\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var script = Output.Create(Ovh.GetMeIPXEScript.InvokeAsync(new Ovh.GetMeIPXEScriptArgs\n        {\n            Name = \"myscript\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupMeIPXEScript(ctx, \u0026GetMeIPXEScriptArgs{\n\t\t\tName: \"myscript\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeIPXEScript.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the IPXE Script.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeIPXEScript.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "The content of the script.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "script",
                    "id"
                ]
            }
        },
        "ovh:index/getMeIPXEScripts:getMeIPXEScripts": {
            "description": "Use this data source to retrieve a list of the names of the account's IPXE Scripts.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst scripts = pulumi.output(ovh.getMeIPXEScripts());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nscripts = ovh.get_me_ipxe_scripts()\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var scripts = Output.Create(Ovh.GetMeIPXEScripts.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeIPXEScripts(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMeIPXEScripts.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the names of all the IPXE Scripts.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getMeInstallationTemplate:getMeInstallationTemplate": {
            "description": "Use this data source to get a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = pulumi.output(ovh.getMeInstallationTemplate({\n    templateName: \"mytemplate\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.get_me_installation_template(template_name=\"mytemplate\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytemplate = Output.Create(Ovh.GetMeInstallationTemplate.InvokeAsync(new Ovh.GetMeInstallationTemplateArgs\n        {\n            TemplateName = \"mytemplate\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupMeInstallationTemplate(ctx, \u0026GetMeInstallationTemplateArgs{\n\t\t\tTemplateName: \"mytemplate\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeInstallationTemplate.\n",
                "properties": {
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeInstallationTemplate.\n",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "beta": {
                        "type": "boolean"
                    },
                    "bitFormat": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getMeInstallationTemplateCustomization:getMeInstallationTemplateCustomization"
                        }
                    },
                    "defaultLanguage": {
                        "type": "string"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModification": {
                        "type": "string"
                    },
                    "lvmReady": {
                        "type": "boolean"
                    },
                    "partitionSchemes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getMeInstallationTemplatePartitionScheme:getMeInstallationTemplatePartitionScheme"
                        }
                    },
                    "supportsDistributionKernel": {
                        "type": "boolean"
                    },
                    "supportsGptLabel": {
                        "type": "boolean"
                    },
                    "supportsRtm": {
                        "type": "boolean"
                    },
                    "supportsSqlServer": {
                        "type": "boolean"
                    },
                    "supportsUefi": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "availableLanguages",
                    "beta",
                    "bitFormat",
                    "category",
                    "customizations",
                    "defaultLanguage",
                    "deprecated",
                    "description",
                    "distribution",
                    "family",
                    "filesystems",
                    "hardRaidConfiguration",
                    "lastModification",
                    "lvmReady",
                    "partitionSchemes",
                    "supportsDistributionKernel",
                    "supportsGptLabel",
                    "supportsRtm",
                    "supportsSqlServer",
                    "supportsUefi",
                    "templateName",
                    "id"
                ]
            }
        },
        "ovh:index/getMeInstallationTemplates:getMeInstallationTemplates": {
            "description": "Use this data source to get the list of custom installation templates available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = pulumi.output(ovh.getMeInstallationTemplates());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntemplates = ovh.get_me_installation_templates()\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var templates = Output.Create(Ovh.GetMeInstallationTemplates.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeInstallationTemplates(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMeInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of custom installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getMePaymentMeanBankAccount:getMePaymentMeanBankAccount": {
            "description": "Use this data source to retrieve information about a bank account\npayment mean associated with an OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ba = pulumi.output(ovh.getMePaymentMeanBankAccount({\n    useDefault: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nba = ovh.get_me_payment_mean_bank_account(use_default=True)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ba = Output.Create(Ovh.GetMePaymentMeanBankAccount.InvokeAsync(new Ovh.GetMePaymentMeanBankAccountArgs\n        {\n            UseDefault = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMePaymentMeanBankAccount(ctx, \u0026GetMePaymentMeanBankAccountArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMePaymentMeanBankAccount.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter bank accounts \non their `description` attributes.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Filter bank accounts on their `state` attribute.\nCan be \"blockedForIncidents\", \"valid\", \"pendingValidation\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve bank account marked as default payment mean.\n"
                    },
                    "useOldest": {
                        "type": "boolean",
                        "description": "Retrieve oldest bank account.\nproject.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMePaymentMeanBankAccount.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved bank account\nis marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the bank account\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useOldest": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:index/getMePaymentMeanCreditCard:getMePaymentMeanCreditCard": {
            "description": "Use this data source to retrieve information about a credit card\npayment mean associated with an OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst cc = pulumi.output(ovh.getMePaymentMeanCreditCard({\n    useDefault: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncc = ovh.get_me_payment_mean_credit_card(use_default=True)\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var cc = Output.Create(Ovh.GetMePaymentMeanCreditCard.InvokeAsync(new Ovh.GetMePaymentMeanCreditCardArgs\n        {\n            UseDefault = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMePaymentMeanCreditCard(ctx, \u0026GetMePaymentMeanCreditCardArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMePaymentMeanCreditCard.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter credit cards \non their `description` attributes.\n"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filter credit cards on their `state` attribute.\nCan be \"expired\", \"valid\", \"tooManyFailures\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve credit card marked as default payment mean.\n"
                    },
                    "useLastToExpire": {
                        "type": "boolean",
                        "description": "Retrieve the credit card that will be the last\nto expire according to its expiration date.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMePaymentMeanCreditCard.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved credit card\nis marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the credit card\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state attribute of the credit card\n"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useLastToExpire": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:index/getMeSSHKey:getMeSSHKey": {
            "description": "Use this data source to retrieve information about an SSH key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykey = pulumi.output(ovh.getMeSSHKey({\n    keyName: \"mykey\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmykey = ovh.get_me_ssh_key(key_name=\"mykey\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mykey = Output.Create(Ovh.GetMeSSHKey.InvokeAsync(new Ovh.GetMeSSHKeyArgs\n        {\n            KeyName = \"mykey\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupMeSSHKey(ctx, \u0026GetMeSSHKeyArgs{\n\t\t\tKeyName: \"mykey\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeSSHKey.\n",
                "properties": {
                    "keyName": {
                        "type": "string",
                        "description": "The name of the SSH key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "keyName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeSSHKey.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The content of the public key.\nE.g.: \"ssh-ed25519 AAAAC3...\"\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "key",
                    "keyName",
                    "id"
                ]
            }
        },
        "ovh:index/getMeSSHKeys:getMeSSHKeys": {
            "description": "Use this data source to retrieve list of names of the account's SSH keys.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykeys = pulumi.output(ovh.getMeSSHKeys());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmykeys = ovh.get_me_ssh_keys()\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mykeys = Output.Create(Ovh.GetMeSSHKeys.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeSSHKeys(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMeSSHKeys.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the names of all the SSH keys.\n"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "id"
                ]
            }
        },
        "ovh:index/getPublicCloudRegion:getPublicCloudRegion": {
            "description": "\u003e __DEPRECATED:__ Use `ovh.getCloudRegion` instead.\n\nUse this data source to retrieve information about a region associated with a\npublic cloud project. The region must be associated with the project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst gRA1 = pulumi.output(ovh.getPublicCloudRegion({\n    projectId: \"XXXXXX\",\n    region: \"GRA1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ng_ra1 = ovh.get_public_cloud_region(project_id=\"XXXXXX\",\n    region=\"GRA1\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gRA1 = Output.Create(Ovh.GetPublicCloudRegion.InvokeAsync(new Ovh.GetPublicCloudRegionArgs\n        {\n            ProjectId = \"XXXXXX\",\n            Region = \"GRA1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetPublicCloudRegion(ctx, \u0026GetPublicCloudRegionArgs{\n\t\t\tProjectId: \"XXXXXX\",\n\t\t\tRegion:    \"GRA1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPublicCloudRegion.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "the name of the public cloud service\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPublicCloudRegion.\n",
                "properties": {
                    "continentCode": {
                        "type": "string",
                        "description": "the code of the geographic continent the region is running.\nE.g.: EU for Europe, US for America...\n"
                    },
                    "datacenterLocation": {
                        "type": "string",
                        "description": "The location code of the datacenter.\nE.g.: \"GRA\", meaning Gravelines, for region \"GRA1\"\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the public cloud service\n"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getPublicCloudRegionService:getPublicCloudRegionService"
                        },
                        "description": "The list of public cloud services running within the region\n"
                    }
                },
                "type": "object",
                "required": [
                    "continentCode",
                    "continentCode",
                    "datacenterLocation",
                    "datacenterLocation",
                    "name",
                    "projectId",
                    "services",
                    "id"
                ]
            }
        },
        "ovh:index/getPublicCloudRegions:getPublicCloudRegions": {
            "description": "\u003e __DEPRECATED:__ Use `ovh.getCloudRegions` instead.\n\nUse this data source to get the regions of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regions = pulumi.output(ovh.getPublicCloudRegions({\n    hasServicesUps: [\"network\"],\n    projectId: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregions = ovh.get_public_cloud_regions(has_services_ups=[\"network\"],\n    project_id=\"XXXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var regions = Output.Create(Ovh.GetPublicCloudRegions.InvokeAsync(new Ovh.GetPublicCloudRegionsArgs\n        {\n            HasServicesUps = \n            {\n                \"network\",\n            },\n            ProjectId = \"XXXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetPublicCloudRegions(ctx, \u0026GetPublicCloudRegionsArgs{\n\t\t\tHasServicesUps: []string{\n\t\t\t\t\"network\",\n\t\t\t},\n\t\t\tProjectId: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPublicCloudRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of services which has to be UP in regions.\nExample: \"image\", \"instance\", \"network\", \"storage\", \"volume\", \"workflow\", ...\nIf left blank, returns all regions associated with the project_id.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_PROJECT_ID` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPublicCloudRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of regions associated with the project, filtered by services UP.\n"
                    },
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "projectId",
                    "id"
                ]
            }
        },
        "ovh:index/getVPS:getVPS": {
            "description": "Use this data source to retrieve information about a vps associated with \nyour OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = pulumi.output(ovh.getVPS({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_vps(service_name=\"XXXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var server = Output.Create(Ovh.GetVPS.InvokeAsync(new Ovh.GetVPSArgs\n        {\n            ServiceName = \"XXXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetVPS(ctx, \u0026GetVPSArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVPS.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVPS.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "The ovh cluster the vps is in\n"
                    },
                    "datacenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getVPSDatacenter:getVPSDatacenter"
                        },
                        "description": "The datacenter in which the vps is located\n* `datacenter.longname` - The fullname of the datacenter (ex: \"Strasbourg SBG1\")\n* `datacenter.name` - The short name of the datacenter (ex: \"sbg1)\n"
                    },
                    "displayname": {
                        "type": "string",
                        "description": "The displayed name in the ovh web admin\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPs addresses attached to the vps\n"
                    },
                    "keymap": {
                        "type": "string",
                        "description": "The keymap for the ip kvm, valid values \"\", \"fr\", \"us\"\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The amount of memory in MB of the vps.\n"
                    },
                    "models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getVPSModel:getVPSModel"
                        },
                        "description": "A dict describing the type of vps.\n* `model.name` - The model name (ex: model1)\n* `model.offer` - The model human description (ex: \"VPS 2016 SSD 1\")\n* `model.version` - The model version (ex: \"2017v2\")\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netbootmode": {
                        "type": "string",
                        "description": "The source of the boot kernel\n"
                    },
                    "offertype": {
                        "type": "string",
                        "description": "The type of offer (ssd, cloud, classic)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "slamonitoring": {
                        "type": "boolean",
                        "description": "A boolean to indicate if OVH sla monitoring is active.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the vps\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of server\n"
                    },
                    "vcore": {
                        "type": "integer",
                        "description": "The number of vcore of the vps\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The OVH zone where the vps is\n"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "datacenters",
                    "displayname",
                    "ips",
                    "keymap",
                    "memory",
                    "models",
                    "name",
                    "netbootmode",
                    "offertype",
                    "serviceName",
                    "slamonitoring",
                    "state",
                    "type",
                    "vcore",
                    "zone",
                    "id"
                ]
            }
        },
        "ovh:index/getVRACKS:getVRACKS": {
            "description": "Use this data source to get the list of Vrack ids available for your OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vracks = pulumi.output(ovh.getVRACKS());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvracks = ovh.get_vracks()\n```\n```csharp\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vracks = Output.Create(Ovh.GetVRACKS.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetVRACKS(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getVRACKS.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-ovh/sdk/go/ovh"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing ovh cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-ovh` repo](https://github.com/pulumi/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-ovh` repo](https://github.com/terraform-providers/terraform-provider-ovh/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-ovh` repo](https://github.com/pulumi/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-ovh` repo](https://github.com/terraform-providers/terraform-provider-ovh/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}