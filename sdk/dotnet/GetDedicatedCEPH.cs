// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetDedicatedCEPH
    {
        /// <summary>
        /// Use this data source to retrieve information about a dedicated CEPH. 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_ceph = Output.Create(Ovh.GetDedicatedCEPH.InvokeAsync(new Ovh.GetDedicatedCEPHArgs
        ///         {
        ///             ServiceName = "XXXXXX",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDedicatedCEPHResult> InvokeAsync(GetDedicatedCEPHArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedCEPHResult>("ovh:index/getDedicatedCEPH:getDedicatedCEPH", args ?? new GetDedicatedCEPHArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a dedicated CEPH. 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_ceph = Output.Create(Ovh.GetDedicatedCEPH.InvokeAsync(new Ovh.GetDedicatedCEPHArgs
        ///         {
        ///             ServiceName = "XXXXXX",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDedicatedCEPHResult> Invoke(GetDedicatedCEPHInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDedicatedCEPHResult>("ovh:index/getDedicatedCEPH:getDedicatedCEPH", args ?? new GetDedicatedCEPHInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDedicatedCEPHArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// CEPH cluster version
        /// </summary>
        [Input("cephVersion")]
        public string? CephVersion { get; set; }

        /// <summary>
        /// The service name of the dedicated CEPH cluster.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// the status of the service
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetDedicatedCEPHArgs()
        {
        }
    }

    public sealed class GetDedicatedCEPHInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// CEPH cluster version
        /// </summary>
        [Input("cephVersion")]
        public Input<string>? CephVersion { get; set; }

        /// <summary>
        /// The service name of the dedicated CEPH cluster.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// the status of the service
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetDedicatedCEPHInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDedicatedCEPHResult
    {
        /// <summary>
        /// list of CEPH monitors IPs
        /// </summary>
        public readonly ImmutableArray<string> CephMons;
        /// <summary>
        /// CEPH cluster version
        /// </summary>
        public readonly string CephVersion;
        /// <summary>
        /// CRUSH algorithm settings. Possible values
        /// * OPTIMAL
        /// * DEFAULT
        /// * LEGACY
        /// * BOBTAIL
        /// * ARGONAUT
        /// * FIREFLY
        /// * HAMMER
        /// * JEWEL
        /// </summary>
        public readonly string CrushTunables;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// CEPH cluster label
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// cluster region
        /// </summary>
        public readonly string Region;
        public readonly string ServiceName;
        /// <summary>
        /// Cluster size in TB
        /// </summary>
        public readonly double Size;
        /// <summary>
        /// the state of the cluster
        /// </summary>
        public readonly string State;
        /// <summary>
        /// the status of the service
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetDedicatedCEPHResult(
            ImmutableArray<string> cephMons,

            string cephVersion,

            string crushTunables,

            string id,

            string label,

            string region,

            string serviceName,

            double size,

            string state,

            string status)
        {
            CephMons = cephMons;
            CephVersion = cephVersion;
            CrushTunables = crushTunables;
            Id = id;
            Label = label;
            Region = region;
            ServiceName = serviceName;
            Size = size;
            State = state;
            Status = status;
        }
    }
}
