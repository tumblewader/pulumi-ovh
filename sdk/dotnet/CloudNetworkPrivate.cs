// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// Creates a private network in a public cloud project.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var net = new Ovh.CloudNetworkPrivate("net", new Ovh.CloudNetworkPrivateArgs
    ///         {
    ///             ProjectId = "67890",
    ///             Regions = 
    ///             {
    ///                 "GRA1",
    ///                 "BHS1",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/cloudNetworkPrivate:CloudNetworkPrivate")]
    public partial class CloudNetworkPrivate : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the network.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_PROJECT_ID` environment variable is used.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// an array of valid OVH public cloud region ID in which the network
        /// will be available. Ex.: "GRA1". Defaults to all public cloud regions.
        /// </summary>
        [Output("regions")]
        public Output<ImmutableArray<string>> Regions { get; private set; } = null!;

        /// <summary>
        /// A map representing the status of the network per region.
        /// * `regions_status/region` - The id of the region.
        /// * `regions_status/status` - The status of the network in the region.
        /// </summary>
        [Output("regionsStatuses")]
        public Output<ImmutableArray<Outputs.CloudNetworkPrivateRegionsStatus>> RegionsStatuses { get; private set; } = null!;

        /// <summary>
        /// the status of the network. should be normally set to 'ACTIVE'.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// the type of the network. Either 'private' or 'public'.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// a vlan id to associate with the network.
        /// Changing this value recreates the resource. Defaults to 0.
        /// </summary>
        [Output("vlanId")]
        public Output<int?> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a CloudNetworkPrivate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudNetworkPrivate(string name, CloudNetworkPrivateArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/cloudNetworkPrivate:CloudNetworkPrivate", name, args ?? new CloudNetworkPrivateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudNetworkPrivate(string name, Input<string> id, CloudNetworkPrivateState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/cloudNetworkPrivate:CloudNetworkPrivate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudNetworkPrivate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudNetworkPrivate Get(string name, Input<string> id, CloudNetworkPrivateState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudNetworkPrivate(name, id, state, options);
        }
    }

    public sealed class CloudNetworkPrivateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the network.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_PROJECT_ID` environment variable is used.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// an array of valid OVH public cloud region ID in which the network
        /// will be available. Ex.: "GRA1". Defaults to all public cloud regions.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        /// <summary>
        /// a vlan id to associate with the network.
        /// Changing this value recreates the resource. Defaults to 0.
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public CloudNetworkPrivateArgs()
        {
        }
    }

    public sealed class CloudNetworkPrivateState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the network.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_PROJECT_ID` environment variable is used.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// an array of valid OVH public cloud region ID in which the network
        /// will be available. Ex.: "GRA1". Defaults to all public cloud regions.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("regionsStatuses")]
        private InputList<Inputs.CloudNetworkPrivateRegionsStatusGetArgs>? _regionsStatuses;

        /// <summary>
        /// A map representing the status of the network per region.
        /// * `regions_status/region` - The id of the region.
        /// * `regions_status/status` - The status of the network in the region.
        /// </summary>
        public InputList<Inputs.CloudNetworkPrivateRegionsStatusGetArgs> RegionsStatuses
        {
            get => _regionsStatuses ?? (_regionsStatuses = new InputList<Inputs.CloudNetworkPrivateRegionsStatusGetArgs>());
            set => _regionsStatuses = value;
        }

        /// <summary>
        /// the status of the network. should be normally set to 'ACTIVE'.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// the type of the network. Either 'private' or 'public'.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// a vlan id to associate with the network.
        /// Changing this value recreates the resource. Defaults to 0.
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public CloudNetworkPrivateState()
        {
        }
    }
}
