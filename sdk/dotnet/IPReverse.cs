// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// Provides a OVH IP reverse.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         // Set the reverse of an IP
    ///         var test = new Ovh.IPReverse("test", new Ovh.IPReverseArgs
    ///         {
    ///             Ip = "192.0.2.0/24",
    ///             Ipreverse = "192.0.2.1",
    ///             Reverse = "example.com",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/iPReverse:IPReverse")]
    public partial class IPReverse : Pulumi.CustomResource
    {
        /// <summary>
        /// The IP block to which the IP belongs
        /// </summary>
        [Output("ip")]
        public Output<string> Ip { get; private set; } = null!;

        /// <summary>
        /// The IP to set the reverse of, default to `ip` if `ip` is a /32 (IPv4) or a /128 (IPv6)
        /// </summary>
        [Output("ipreverse")]
        public Output<string?> Ipreverse { get; private set; } = null!;

        /// <summary>
        /// The value of the reverse
        /// </summary>
        [Output("reverse")]
        public Output<string> Reverse { get; private set; } = null!;


        /// <summary>
        /// Create a IPReverse resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IPReverse(string name, IPReverseArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/iPReverse:IPReverse", name, args ?? new IPReverseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IPReverse(string name, Input<string> id, IPReverseState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/iPReverse:IPReverse", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IPReverse resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IPReverse Get(string name, Input<string> id, IPReverseState? state = null, CustomResourceOptions? options = null)
        {
            return new IPReverse(name, id, state, options);
        }
    }

    public sealed class IPReverseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP block to which the IP belongs
        /// </summary>
        [Input("ip", required: true)]
        public Input<string> Ip { get; set; } = null!;

        /// <summary>
        /// The IP to set the reverse of, default to `ip` if `ip` is a /32 (IPv4) or a /128 (IPv6)
        /// </summary>
        [Input("ipreverse")]
        public Input<string>? Ipreverse { get; set; }

        /// <summary>
        /// The value of the reverse
        /// </summary>
        [Input("reverse", required: true)]
        public Input<string> Reverse { get; set; } = null!;

        public IPReverseArgs()
        {
        }
    }

    public sealed class IPReverseState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP block to which the IP belongs
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The IP to set the reverse of, default to `ip` if `ip` is a /32 (IPv4) or a /128 (IPv6)
        /// </summary>
        [Input("ipreverse")]
        public Input<string>? Ipreverse { get; set; }

        /// <summary>
        /// The value of the reverse
        /// </summary>
        [Input("reverse")]
        public Input<string>? Reverse { get; set; }

        public IPReverseState()
        {
        }
    }
}
