// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// Attach a dedicated server to a VRack.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var vds = new Ovh.VRACDedicatedServer("vds", new Ovh.VRACDedicatedServerArgs
    ///         {
    ///             ServerId = "67890",
    ///             VrackId = "12345",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/vRACDedicatedServer:VRACDedicatedServer")]
    public partial class VRACDedicatedServer : Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the dedicated server.
        /// </summary>
        [Output("serverId")]
        public Output<string> ServerId { get; private set; } = null!;

        /// <summary>
        /// The id of the vrack.
        /// </summary>
        [Output("vrackId")]
        public Output<string> VrackId { get; private set; } = null!;


        /// <summary>
        /// Create a VRACDedicatedServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VRACDedicatedServer(string name, VRACDedicatedServerArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/vRACDedicatedServer:VRACDedicatedServer", name, args ?? new VRACDedicatedServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VRACDedicatedServer(string name, Input<string> id, VRACDedicatedServerState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/vRACDedicatedServer:VRACDedicatedServer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VRACDedicatedServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VRACDedicatedServer Get(string name, Input<string> id, VRACDedicatedServerState? state = null, CustomResourceOptions? options = null)
        {
            return new VRACDedicatedServer(name, id, state, options);
        }
    }

    public sealed class VRACDedicatedServerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the dedicated server.
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        /// <summary>
        /// The id of the vrack.
        /// </summary>
        [Input("vrackId", required: true)]
        public Input<string> VrackId { get; set; } = null!;

        public VRACDedicatedServerArgs()
        {
        }
    }

    public sealed class VRACDedicatedServerState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the dedicated server.
        /// </summary>
        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        /// <summary>
        /// The id of the vrack.
        /// </summary>
        [Input("vrackId")]
        public Input<string>? VrackId { get; set; }

        public VRACDedicatedServerState()
        {
        }
    }
}
