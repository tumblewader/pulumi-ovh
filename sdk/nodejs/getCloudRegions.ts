// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get the regions of a public cloud project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const regions = pulumi.output(ovh.getCloudRegions({
 *     hasServicesUps: ["network"],
 *     projectId: "XXXXXX",
 * }));
 * ```
 */
export function getCloudRegions(args: GetCloudRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudRegionsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("ovh:index/getCloudRegions:getCloudRegions", {
        "hasServicesUps": args.hasServicesUps,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudRegions.
 */
export interface GetCloudRegionsArgs {
    /**
     * List of services which has to be UP in regions.
     * Example: "image", "instance", "network", "storage", "volume", "workflow", ...
     * If left blank, returns all regions associated with the project_id.
     */
    hasServicesUps?: string[];
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_PROJECT_ID` environment variable is used.
     */
    projectId: string;
}

/**
 * A collection of values returned by getCloudRegions.
 */
export interface GetCloudRegionsResult {
    readonly hasServicesUps?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of regions associated with the project, filtered by services UP.
     */
    readonly names: string[];
    readonly projectId: string;
}

export function getCloudRegionsOutput(args: GetCloudRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudRegionsResult> {
    return pulumi.output(args).apply(a => getCloudRegions(a, opts))
}

/**
 * A collection of arguments for invoking getCloudRegions.
 */
export interface GetCloudRegionsOutputArgs {
    /**
     * List of services which has to be UP in regions.
     * Example: "image", "instance", "network", "storage", "volume", "workflow", ...
     * If left blank, returns all regions associated with the project_id.
     */
    hasServicesUps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_PROJECT_ID` environment variable is used.
     */
    projectId: pulumi.Input<string>;
}
