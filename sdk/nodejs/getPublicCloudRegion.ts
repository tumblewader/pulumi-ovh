// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * > __DEPRECATED:__ Use `ovh.getCloudRegion` instead.
 *
 * Use this data source to retrieve information about a region associated with a
 * public cloud project. The region must be associated with the project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const gRA1 = pulumi.output(ovh.getPublicCloudRegion({
 *     projectId: "XXXXXX",
 *     region: "GRA1",
 * }));
 * ```
 */
export function getPublicCloudRegion(args: GetPublicCloudRegionArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicCloudRegionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("ovh:index/getPublicCloudRegion:getPublicCloudRegion", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublicCloudRegion.
 */
export interface GetPublicCloudRegionArgs {
    /**
     * the name of the public cloud service
     */
    name: string;
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_PROJECT_ID` environment variable is used.
     */
    projectId: string;
}

/**
 * A collection of values returned by getPublicCloudRegion.
 */
export interface GetPublicCloudRegionResult {
    /**
     * the code of the geographic continent the region is running.
     * E.g.: EU for Europe, US for America...
     */
    readonly continentCode: string;
    /**
     * The location code of the datacenter.
     * E.g.: "GRA", meaning Gravelines, for region "GRA1"
     */
    readonly datacenterLocation: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * the name of the public cloud service
     */
    readonly name: string;
    readonly projectId: string;
    /**
     * The list of public cloud services running within the region
     */
    readonly services: outputs.GetPublicCloudRegionService[];
}

export function getPublicCloudRegionOutput(args: GetPublicCloudRegionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicCloudRegionResult> {
    return pulumi.output(args).apply(a => getPublicCloudRegion(a, opts))
}

/**
 * A collection of arguments for invoking getPublicCloudRegion.
 */
export interface GetPublicCloudRegionOutputArgs {
    /**
     * the name of the public cloud service
     */
    name: pulumi.Input<string>;
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_PROJECT_ID` environment variable is used.
     */
    projectId: pulumi.Input<string>;
}
