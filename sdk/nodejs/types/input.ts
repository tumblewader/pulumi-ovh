// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface CloudNetworkPrivateRegionsStatus {
    region?: pulumi.Input<string>;
    /**
     * the status of the network. should be normally set to 'ACTIVE'.
     */
    status: pulumi.Input<string>;
}

export interface CloudNetworkPrivateSubnetIpPool {
    /**
     * Enable DHCP.
     * Changing this forces a new resource to be created. Defaults to false.
     * _
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * Last ip for this region.
     * Changing this value recreates the subnet.
     */
    end?: pulumi.Input<string>;
    /**
     * Global network in CIDR format.
     * Changing this value recreates the subnet
     */
    network?: pulumi.Input<string>;
    /**
     * The region in which the network subnet will be created.
     * Ex.: "GRA1". Changing this value recreates the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * First ip for this region.
     * Changing this value recreates the subnet.
     */
    start?: pulumi.Input<string>;
}

export interface CloudUserRole {
    /**
     * A description associated with the user.
     */
    description?: pulumi.Input<string>;
    /**
     * id of the role
     */
    id?: pulumi.Input<string>;
    /**
     * name of the role
     */
    name?: pulumi.Input<string>;
    /**
     * list of permissions associated with the role
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DedicatedServerInstallTaskDetails {
    /**
     * Template change log details.
     */
    changeLog?: pulumi.Input<string>;
    /**
     * Set up the server using the provided hostname instead of the default hostname.
     */
    customHostname?: pulumi.Input<string>;
    /**
     * Disk group id.
     */
    diskGroupId?: pulumi.Input<number>;
    /**
     * set to true to install RTM.
     */
    installRtm?: pulumi.Input<boolean>;
    /**
     * set to true to install sql server (Windows template only).
     */
    installSqlServer?: pulumi.Input<boolean>;
    /**
     * language.
     */
    language?: pulumi.Input<string>;
    /**
     * set to true to disable RAID.
     */
    noRaid?: pulumi.Input<boolean>;
    /**
     * Indicate the URL where your postinstall customisation script is located.
     */
    postInstallationScriptLink?: pulumi.Input<string>;
    /**
     * Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
     */
    postInstallationScriptReturn?: pulumi.Input<string>;
    /**
     * set to true to make a hardware raid reset.
     */
    resetHwRaid?: pulumi.Input<boolean>;
    /**
     * soft raid devices.
     */
    softRaidDevices?: pulumi.Input<number>;
    /**
     * Name of the ssh key that should be installed. Password login will be disabled.
     */
    sshKeyName?: pulumi.Input<string>;
    /**
     * Use the distribution's native kernel instead of the recommended OVH Kernel.
     */
    useDistribKernel?: pulumi.Input<boolean>;
    /**
     * set to true to use SPLA.
     */
    useSpla?: pulumi.Input<boolean>;
}

export interface IPLoadbalancingHTTPFarmProbe {
    /**
     * Force use of SSL (TLS)
     */
    forceSsl?: pulumi.Input<boolean>;
    /**
     * probe interval, Value between 30 and 3600 seconds, default 30
     */
    interval?: pulumi.Input<number>;
    /**
     * What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
     */
    match?: pulumi.Input<string>;
    /**
     * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
     */
    method?: pulumi.Input<string>;
    /**
     * Negate probe result
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Pattern to match against `match`
     */
    pattern?: pulumi.Input<string>;
    /**
     * Port for backends to recieve traffic on.
     */
    port?: pulumi.Input<number>;
    /**
     * Valid values : `http`, `internal`, `mysql`, `oko`, `pgsql`, `smtp`, `tcp`
     */
    type: pulumi.Input<string>;
    /**
     * URL for HTTP probe type.
     */
    url?: pulumi.Input<string>;
}

export interface IPLoadbalancingHTTPRouteAction {
    status?: pulumi.Input<number>;
    target?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IPLoadbalancingTCPFarmProbe {
    /**
     * Force use of SSL (TLS)
     */
    forceSsl?: pulumi.Input<boolean>;
    /**
     * probe interval, Value between 30 and 3600 seconds, default 30
     */
    interval?: pulumi.Input<number>;
    /**
     * What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
     */
    match?: pulumi.Input<string>;
    /**
     * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
     */
    method?: pulumi.Input<string>;
    /**
     * Negate probe result
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Pattern to match against `match`
     */
    pattern?: pulumi.Input<string>;
    /**
     * Port for backends to recieve traffic on.
     */
    port?: pulumi.Input<number>;
    /**
     * Valid values : `http`, `internal`, `mysql`, `oko`, `pgsql`, `smtp`, `tcp`
     */
    type: pulumi.Input<string>;
    /**
     * URL for HTTP probe type.
     */
    url?: pulumi.Input<string>;
}

export interface MeInstallationTemplateCustomization {
    changeLog?: pulumi.Input<string>;
    customHostname?: pulumi.Input<string>;
    postInstallationScriptLink?: pulumi.Input<string>;
    postInstallationScriptReturn?: pulumi.Input<string>;
    rating?: pulumi.Input<number>;
    sshKeyName?: pulumi.Input<string>;
    useDistributionKernel?: pulumi.Input<boolean>;
}

export interface PubicCloudPrivateNetworkRegionsStatus {
    region?: pulumi.Input<string>;
    /**
     * the status of the network. should be normally set to 'ACTIVE'.
     */
    status: pulumi.Input<string>;
}

export interface PubicCloudPrivateNetworkSubnetIpPool {
    /**
     * Enable DHCP.
     * Changing this forces a new resource to be created. Defaults to false.
     * _
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * Last ip for this region.
     * Changing this value recreates the subnet.
     */
    end?: pulumi.Input<string>;
    /**
     * Global network in CIDR format.
     * Changing this value recreates the subnet
     */
    network?: pulumi.Input<string>;
    /**
     * The region in which the network subnet will be created.
     * Ex.: "GRA1". Changing this value recreates the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * First ip for this region.
     * Changing this value recreates the subnet.
     */
    start?: pulumi.Input<string>;
}

export interface PublicCloudUserRole {
    /**
     * A description associated with the user.
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
}

