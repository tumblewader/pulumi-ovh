// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an IPXE Script.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.LookupMeIPXEScript(ctx, &GetMeIPXEScriptArgs{
// 			Name: "myscript",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupMeIPXEScript(ctx *pulumi.Context, args *LookupMeIPXEScriptArgs, opts ...pulumi.InvokeOption) (*LookupMeIPXEScriptResult, error) {
	var rv LookupMeIPXEScriptResult
	err := ctx.Invoke("ovh:index/getMeIPXEScript:getMeIPXEScript", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMeIPXEScript.
type LookupMeIPXEScriptArgs struct {
	// The name of the IPXE Script.
	Name string `pulumi:"name"`
}

// A collection of values returned by getMeIPXEScript.
type LookupMeIPXEScriptResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// See Argument Reference above.
	Name string `pulumi:"name"`
	// The content of the script.
	Script string `pulumi:"script"`
}

func LookupMeIPXEScriptOutput(ctx *pulumi.Context, args LookupMeIPXEScriptOutputArgs, opts ...pulumi.InvokeOption) LookupMeIPXEScriptResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMeIPXEScriptResult, error) {
			args := v.(LookupMeIPXEScriptArgs)
			r, err := LookupMeIPXEScript(ctx, &args, opts...)
			return *r, err
		}).(LookupMeIPXEScriptResultOutput)
}

// A collection of arguments for invoking getMeIPXEScript.
type LookupMeIPXEScriptOutputArgs struct {
	// The name of the IPXE Script.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupMeIPXEScriptOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeIPXEScriptArgs)(nil)).Elem()
}

// A collection of values returned by getMeIPXEScript.
type LookupMeIPXEScriptResultOutput struct{ *pulumi.OutputState }

func (LookupMeIPXEScriptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeIPXEScriptResult)(nil)).Elem()
}

func (o LookupMeIPXEScriptResultOutput) ToLookupMeIPXEScriptResultOutput() LookupMeIPXEScriptResultOutput {
	return o
}

func (o LookupMeIPXEScriptResultOutput) ToLookupMeIPXEScriptResultOutputWithContext(ctx context.Context) LookupMeIPXEScriptResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMeIPXEScriptResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeIPXEScriptResult) string { return v.Id }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupMeIPXEScriptResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeIPXEScriptResult) string { return v.Name }).(pulumi.StringOutput)
}

// The content of the script.
func (o LookupMeIPXEScriptResultOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeIPXEScriptResult) string { return v.Script }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMeIPXEScriptResultOutput{})
}
