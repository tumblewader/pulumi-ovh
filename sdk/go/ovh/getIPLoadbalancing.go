// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an IP Load Balancing product
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.GetIPLoadbalancing(ctx, &GetIPLoadbalancingArgs{
// 			ServiceName: pulumi.StringRef("xxx"),
// 			State:       pulumi.StringRef("ok"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIPLoadbalancing(ctx *pulumi.Context, args *GetIPLoadbalancingArgs, opts ...pulumi.InvokeOption) (*GetIPLoadbalancingResult, error) {
	var rv GetIPLoadbalancingResult
	err := ctx.Invoke("ovh:index/getIPLoadbalancing:getIPLoadbalancing", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIPLoadbalancing.
type GetIPLoadbalancingArgs struct {
	// the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName *string `pulumi:"displayName"`
	// Your IP load balancing
	IpLoadbalancing *string `pulumi:"ipLoadbalancing"`
	// The IPV4 associated to your IP load balancing
	Ipv4 *string `pulumi:"ipv4"`
	// The IPV6 associated to your IP load balancing
	Ipv6 *string `pulumi:"ipv6"`
	// The offer of your IP load balancing
	Offer *string `pulumi:"offer"`
	// The internal name of your IP load balancing
	ServiceName *string `pulumi:"serviceName"`
	// Modern oldest compatible clients : Firefox 27, Chrome 30,
	// IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8.
	// Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5,
	// Safari 1, Windows XP IE8, Android 2.3, Java 7.
	// Can take any of the following value: "intermediate", "modern"
	SslConfiguration *string `pulumi:"sslConfiguration"`
	// Current state of your IP. Can take any of the following value:
	// "blacklisted", "deleted", "free", "ok", "quarantined", "suspended"
	State *string `pulumi:"state"`
	// Vrack eligibility. Takes a boolean value.
	VrackEligibility *bool `pulumi:"vrackEligibility"`
	// Name of the vRack on which the current Load Balancer is
	// attached to, as it is named on vRack product
	VrackName *string `pulumi:"vrackName"`
	// Location where your service is. This takes an array of values.
	Zones []string `pulumi:"zones"`
}

// A collection of values returned by getIPLoadbalancing.
type GetIPLoadbalancingResult struct {
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	IpLoadbalancing string `pulumi:"ipLoadbalancing"`
	Ipv4            string `pulumi:"ipv4"`
	Ipv6            string `pulumi:"ipv6"`
	// The metrics token associated with your IP load balancing
	// This attribute is sensitive.
	MetricsToken string `pulumi:"metricsToken"`
	Offer        string `pulumi:"offer"`
	// Available additional zone for your Load Balancer
	OrderableZones   []GetIPLoadbalancingOrderableZone `pulumi:"orderableZones"`
	ServiceName      string                            `pulumi:"serviceName"`
	SslConfiguration string                            `pulumi:"sslConfiguration"`
	State            string                            `pulumi:"state"`
	VrackEligibility bool                              `pulumi:"vrackEligibility"`
	VrackName        string                            `pulumi:"vrackName"`
	Zones            []string                          `pulumi:"zones"`
}

func GetIPLoadbalancingOutput(ctx *pulumi.Context, args GetIPLoadbalancingOutputArgs, opts ...pulumi.InvokeOption) GetIPLoadbalancingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIPLoadbalancingResult, error) {
			args := v.(GetIPLoadbalancingArgs)
			r, err := GetIPLoadbalancing(ctx, &args, opts...)
			return *r, err
		}).(GetIPLoadbalancingResultOutput)
}

// A collection of arguments for invoking getIPLoadbalancing.
type GetIPLoadbalancingOutputArgs struct {
	// the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Your IP load balancing
	IpLoadbalancing pulumi.StringPtrInput `pulumi:"ipLoadbalancing"`
	// The IPV4 associated to your IP load balancing
	Ipv4 pulumi.StringPtrInput `pulumi:"ipv4"`
	// The IPV6 associated to your IP load balancing
	Ipv6 pulumi.StringPtrInput `pulumi:"ipv6"`
	// The offer of your IP load balancing
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The internal name of your IP load balancing
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Modern oldest compatible clients : Firefox 27, Chrome 30,
	// IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8.
	// Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5,
	// Safari 1, Windows XP IE8, Android 2.3, Java 7.
	// Can take any of the following value: "intermediate", "modern"
	SslConfiguration pulumi.StringPtrInput `pulumi:"sslConfiguration"`
	// Current state of your IP. Can take any of the following value:
	// "blacklisted", "deleted", "free", "ok", "quarantined", "suspended"
	State pulumi.StringPtrInput `pulumi:"state"`
	// Vrack eligibility. Takes a boolean value.
	VrackEligibility pulumi.BoolPtrInput `pulumi:"vrackEligibility"`
	// Name of the vRack on which the current Load Balancer is
	// attached to, as it is named on vRack product
	VrackName pulumi.StringPtrInput `pulumi:"vrackName"`
	// Location where your service is. This takes an array of values.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetIPLoadbalancingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPLoadbalancingArgs)(nil)).Elem()
}

// A collection of values returned by getIPLoadbalancing.
type GetIPLoadbalancingResultOutput struct{ *pulumi.OutputState }

func (GetIPLoadbalancingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPLoadbalancingResult)(nil)).Elem()
}

func (o GetIPLoadbalancingResultOutput) ToGetIPLoadbalancingResultOutput() GetIPLoadbalancingResultOutput {
	return o
}

func (o GetIPLoadbalancingResultOutput) ToGetIPLoadbalancingResultOutputWithContext(ctx context.Context) GetIPLoadbalancingResultOutput {
	return o
}

func (o GetIPLoadbalancingResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIPLoadbalancingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) IpLoadbalancing() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.IpLoadbalancing }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.Ipv4 }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// The metrics token associated with your IP load balancing
// This attribute is sensitive.
func (o GetIPLoadbalancingResultOutput) MetricsToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.MetricsToken }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.Offer }).(pulumi.StringOutput)
}

// Available additional zone for your Load Balancer
func (o GetIPLoadbalancingResultOutput) OrderableZones() GetIPLoadbalancingOrderableZoneArrayOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) []GetIPLoadbalancingOrderableZone { return v.OrderableZones }).(GetIPLoadbalancingOrderableZoneArrayOutput)
}

func (o GetIPLoadbalancingResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) SslConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.SslConfiguration }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) VrackEligibility() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) bool { return v.VrackEligibility }).(pulumi.BoolOutput)
}

func (o GetIPLoadbalancingResultOutput) VrackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) string { return v.VrackName }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIPLoadbalancingResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIPLoadbalancingResultOutput{})
}
