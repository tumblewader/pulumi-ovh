// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of Vrack network ids available for your IPLoadbalancer associated with your OVH account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.GetIPLoadbalancingVRACNetworks(ctx, &GetIPLoadbalancingVRACNetworksArgs{
// 			ServiceName: "xxx",
// 			Subnet:      pulumi.StringRef("10.0.0.0/24"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIPLoadbalancingVRACNetworks(ctx *pulumi.Context, args *GetIPLoadbalancingVRACNetworksArgs, opts ...pulumi.InvokeOption) (*GetIPLoadbalancingVRACNetworksResult, error) {
	var rv GetIPLoadbalancingVRACNetworksResult
	err := ctx.Invoke("ovh:index/getIPLoadbalancingVRACNetworks:getIPLoadbalancingVRACNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIPLoadbalancingVRACNetworks.
type GetIPLoadbalancingVRACNetworksArgs struct {
	// The internal name of your IP load balancing
	ServiceName string `pulumi:"serviceName"`
	// Filters networks on the subnet.
	Subnet *string `pulumi:"subnet"`
	// Filters networks on the vlan id.
	VlanId *int `pulumi:"vlanId"`
}

// A collection of values returned by getIPLoadbalancingVRACNetworks.
type GetIPLoadbalancingVRACNetworksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of vrack network ids.
	Results     []int   `pulumi:"results"`
	ServiceName string  `pulumi:"serviceName"`
	Subnet      *string `pulumi:"subnet"`
	VlanId      *int    `pulumi:"vlanId"`
}

func GetIPLoadbalancingVRACNetworksOutput(ctx *pulumi.Context, args GetIPLoadbalancingVRACNetworksOutputArgs, opts ...pulumi.InvokeOption) GetIPLoadbalancingVRACNetworksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIPLoadbalancingVRACNetworksResult, error) {
			args := v.(GetIPLoadbalancingVRACNetworksArgs)
			r, err := GetIPLoadbalancingVRACNetworks(ctx, &args, opts...)
			return *r, err
		}).(GetIPLoadbalancingVRACNetworksResultOutput)
}

// A collection of arguments for invoking getIPLoadbalancingVRACNetworks.
type GetIPLoadbalancingVRACNetworksOutputArgs struct {
	// The internal name of your IP load balancing
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Filters networks on the subnet.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Filters networks on the vlan id.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (GetIPLoadbalancingVRACNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPLoadbalancingVRACNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getIPLoadbalancingVRACNetworks.
type GetIPLoadbalancingVRACNetworksResultOutput struct{ *pulumi.OutputState }

func (GetIPLoadbalancingVRACNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPLoadbalancingVRACNetworksResult)(nil)).Elem()
}

func (o GetIPLoadbalancingVRACNetworksResultOutput) ToGetIPLoadbalancingVRACNetworksResultOutput() GetIPLoadbalancingVRACNetworksResultOutput {
	return o
}

func (o GetIPLoadbalancingVRACNetworksResultOutput) ToGetIPLoadbalancingVRACNetworksResultOutputWithContext(ctx context.Context) GetIPLoadbalancingVRACNetworksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIPLoadbalancingVRACNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingVRACNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of vrack network ids.
func (o GetIPLoadbalancingVRACNetworksResultOutput) Results() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetIPLoadbalancingVRACNetworksResult) []int { return v.Results }).(pulumi.IntArrayOutput)
}

func (o GetIPLoadbalancingVRACNetworksResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadbalancingVRACNetworksResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetIPLoadbalancingVRACNetworksResultOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIPLoadbalancingVRACNetworksResult) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

func (o GetIPLoadbalancingVRACNetworksResultOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetIPLoadbalancingVRACNetworksResult) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIPLoadbalancingVRACNetworksResultOutput{})
}
