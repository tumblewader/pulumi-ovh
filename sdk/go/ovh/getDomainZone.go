// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a domain zone.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.GetDomainZone(ctx, &GetDomainZoneArgs{
// 			Name: "mysite.ovh",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetDomainZone(ctx *pulumi.Context, args *GetDomainZoneArgs, opts ...pulumi.InvokeOption) (*GetDomainZoneResult, error) {
	var rv GetDomainZoneResult
	err := ctx.Invoke("ovh:index/getDomainZone:getDomainZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainZone.
type GetDomainZoneArgs struct {
	// The name of the domain zone.
	Name string `pulumi:"name"`
}

// A collection of values returned by getDomainZone.
type GetDomainZoneResult struct {
	// Is DNSSEC supported by this zone
	DnssecSupported bool `pulumi:"dnssecSupported"`
	// hasDnsAnycast flag of the DNS zone
	HasDnsAnycast bool `pulumi:"hasDnsAnycast"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last update date of the DNS zone
	LastUpdate string `pulumi:"lastUpdate"`
	Name       string `pulumi:"name"`
	// Name servers that host the DNS zone
	NameServers []string `pulumi:"nameServers"`
}

func GetDomainZoneOutput(ctx *pulumi.Context, args GetDomainZoneOutputArgs, opts ...pulumi.InvokeOption) GetDomainZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainZoneResult, error) {
			args := v.(GetDomainZoneArgs)
			r, err := GetDomainZone(ctx, &args, opts...)
			return *r, err
		}).(GetDomainZoneResultOutput)
}

// A collection of arguments for invoking getDomainZone.
type GetDomainZoneOutputArgs struct {
	// The name of the domain zone.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDomainZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainZoneArgs)(nil)).Elem()
}

// A collection of values returned by getDomainZone.
type GetDomainZoneResultOutput struct{ *pulumi.OutputState }

func (GetDomainZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainZoneResult)(nil)).Elem()
}

func (o GetDomainZoneResultOutput) ToGetDomainZoneResultOutput() GetDomainZoneResultOutput {
	return o
}

func (o GetDomainZoneResultOutput) ToGetDomainZoneResultOutputWithContext(ctx context.Context) GetDomainZoneResultOutput {
	return o
}

// Is DNSSEC supported by this zone
func (o GetDomainZoneResultOutput) DnssecSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainZoneResult) bool { return v.DnssecSupported }).(pulumi.BoolOutput)
}

// hasDnsAnycast flag of the DNS zone
func (o GetDomainZoneResultOutput) HasDnsAnycast() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainZoneResult) bool { return v.HasDnsAnycast }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last update date of the DNS zone
func (o GetDomainZoneResultOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainZoneResult) string { return v.LastUpdate }).(pulumi.StringOutput)
}

func (o GetDomainZoneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainZoneResult) string { return v.Name }).(pulumi.StringOutput)
}

// Name servers that host the DNS zone
func (o GetDomainZoneResultOutput) NameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainZoneResult) []string { return v.NameServers }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainZoneResultOutput{})
}
