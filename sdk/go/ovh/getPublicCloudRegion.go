// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > __DEPRECATED:__ Use `getCloudRegion` instead.
//
// Use this data source to retrieve information about a region associated with a
// public cloud project. The region must be associated with the project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.GetPublicCloudRegion(ctx, &GetPublicCloudRegionArgs{
// 			ProjectId: "XXXXXX",
// 			Region:    "GRA1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPublicCloudRegion(ctx *pulumi.Context, args *GetPublicCloudRegionArgs, opts ...pulumi.InvokeOption) (*GetPublicCloudRegionResult, error) {
	var rv GetPublicCloudRegionResult
	err := ctx.Invoke("ovh:index/getPublicCloudRegion:getPublicCloudRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPublicCloudRegion.
type GetPublicCloudRegionArgs struct {
	// the name of the public cloud service
	Name string `pulumi:"name"`
	// The id of the public cloud project. If omitted,
	// the `OVH_PROJECT_ID` environment variable is used.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getPublicCloudRegion.
type GetPublicCloudRegionResult struct {
	// the code of the geographic continent the region is running.
	// E.g.: EU for Europe, US for America...
	ContinentCode string `pulumi:"continentCode"`
	// The location code of the datacenter.
	// E.g.: "GRA", meaning Gravelines, for region "GRA1"
	DatacenterLocation string `pulumi:"datacenterLocation"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// the name of the public cloud service
	Name      string `pulumi:"name"`
	ProjectId string `pulumi:"projectId"`
	// The list of public cloud services running within the region
	Services []GetPublicCloudRegionService `pulumi:"services"`
}

func GetPublicCloudRegionOutput(ctx *pulumi.Context, args GetPublicCloudRegionOutputArgs, opts ...pulumi.InvokeOption) GetPublicCloudRegionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPublicCloudRegionResult, error) {
			args := v.(GetPublicCloudRegionArgs)
			r, err := GetPublicCloudRegion(ctx, &args, opts...)
			return *r, err
		}).(GetPublicCloudRegionResultOutput)
}

// A collection of arguments for invoking getPublicCloudRegion.
type GetPublicCloudRegionOutputArgs struct {
	// the name of the public cloud service
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the public cloud project. If omitted,
	// the `OVH_PROJECT_ID` environment variable is used.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetPublicCloudRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicCloudRegionArgs)(nil)).Elem()
}

// A collection of values returned by getPublicCloudRegion.
type GetPublicCloudRegionResultOutput struct{ *pulumi.OutputState }

func (GetPublicCloudRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicCloudRegionResult)(nil)).Elem()
}

func (o GetPublicCloudRegionResultOutput) ToGetPublicCloudRegionResultOutput() GetPublicCloudRegionResultOutput {
	return o
}

func (o GetPublicCloudRegionResultOutput) ToGetPublicCloudRegionResultOutputWithContext(ctx context.Context) GetPublicCloudRegionResultOutput {
	return o
}

// the code of the geographic continent the region is running.
// E.g.: EU for Europe, US for America...
func (o GetPublicCloudRegionResultOutput) ContinentCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCloudRegionResult) string { return v.ContinentCode }).(pulumi.StringOutput)
}

// The location code of the datacenter.
// E.g.: "GRA", meaning Gravelines, for region "GRA1"
func (o GetPublicCloudRegionResultOutput) DatacenterLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCloudRegionResult) string { return v.DatacenterLocation }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPublicCloudRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCloudRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

// the name of the public cloud service
func (o GetPublicCloudRegionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCloudRegionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPublicCloudRegionResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicCloudRegionResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The list of public cloud services running within the region
func (o GetPublicCloudRegionResultOutput) Services() GetPublicCloudRegionServiceArrayOutput {
	return o.ApplyT(func(v GetPublicCloudRegionResult) []GetPublicCloudRegionService { return v.Services }).(GetPublicCloudRegionServiceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPublicCloudRegionResultOutput{})
}
